{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/list.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/snack-bar.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js","webpack:///src/app/shared/material.module.ts"],"names":["DataSource","isDataSource","value","connect","ArrayDataSource","_data","CollectionViewer","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","length","forEach","_markSelected","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","has","size","isEmpty","predicate","selected","_selected","sort","next","source","added","removed","add","push","getMultipleValuesInSingleSelectionError","Array","from","SelectionChange","Error","UniqueSelectionDispatcher","_listeners","id","name","listener","filter","registered","ɵfac","UniqueSelectionDispatcher_Factory","t","ɵprov","factory","token","providedIn","type","args","TreeDataNodeFlattener","LayoutModule","ɵmod","ɵinj","LayoutModule_Factory","mediaQueriesForWebkitCompatibility","mediaQueryStyleNode","MediaMatcher","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","createEmptyStyleRule","MediaMatcher_Factory","ctorParameters","document","createElement","setAttribute","head","appendChild","sheet","insertRule","e","console","error","matches","media","addListener","removeListener","BreakpointState","InternalBreakpointState","Query","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","complete","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observables","map","observable","stateObservable","pipe","breakpointStates","response","breakpoints","state","get","queryObservable","observer","handler","run","nextMql","output","set","BreakpointObserver_Factory","split","reduce","a1","a2","concat","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","top","left","_isEnabled","_document","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","style","classList","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","ScrollStrategy","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategyConfig","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_detach","disable","_overlayRef","hasAttached","detach","overlayRef","stream","scrolled","threshold","_initialScrollPosition","subscribe","scrollPosition","Math","abs","updatePosition","unsubscribe","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategyConfig","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","config","block","reposition","ScrollStrategyOptions_Factory","undefined","decorators","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","OriginConnectionPosition","OverlayConnectionPosition","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","event","overlays","i","_keydownEvents","observers","_isAttached","addEventListener","index","indexOf","splice","removeEventListener","OverlayKeyboardDispatcher_Factory","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY","dispatcher","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER","provide","deps","useFactory","isTestEnvironment","__karma__","jasmine","OverlayContainer","container","_containerElement","parentNode","removeChild","_createContainer","containerClass","oppositePlatformContainers","querySelectorAll","OverlayContainer_Factory","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OVERLAY_CONTAINER_PROVIDER","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","EMPTY","_backdropClickHandler","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","parentElement","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","onStable","asObservable","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","apply","strategy","sizeConfig","assign","dir","direction","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","insertBefore","requestAnimationFrame","runOutsideAngular","nextSibling","backdropToDetach","timeoutId","finishDetach","clearTimeout","setTimeout","cssClasses","isAdd","cssClass","subscription","children","OverlaySizeConfig","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","hostElement","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","_origin","offset","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","scrollable","getElementRef","nativeElement","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","currentValue","currentOverflow","axis","pair","Element","Point","OverlayFit","FallbackPosition","BoundingBoxRect","FlexibleFit","ConnectedPosition","destination","hasOwnProperty","input","units","parseFloat","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","slice","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","elementRef","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","_appRef","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","ɵdir","selectors","exportAs","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","viewportMargin","open","backdropClick","positionChange","overlayKeydown","_templatePortal","_scrollStrategyFactory","changes","_position","_updatePositionStrategy","_attachOverlay","_detachOverlay","create","_buildConfig","keydownEvents","keyCode","preventDefault","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","p","emit","_createOverlay","CdkConnectedOverlay_Factory","inputs","outputs","features","propDecorators","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","OverlayModule_Factory","providers","imports","ngJitMode","declarations","exports","OVERLAY_PROVIDERS","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","ComponentType","Portal","_attachedHost","ComponentPortal","component","injector","componentFactoryResolver","TemplatePortal","template","context","DomPortal","PortalOutlet","BasePortalOutlet","attachDomPortal","_attachedPortal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","setDisposeFn","destroy","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","rootNode","DomPortalHost","CdkPortal","CdkPortal_Factory","TemplatePortalDirective","TemplatePortalDirective_Factory","ɵTemplatePortalDirective_BaseFactory","useExisting","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","_getRootNode","_attachedRef","ref","clear","nodeType","ELEMENT_NODE","CdkPortalOutlet_Factory","PortalHostDirective","PortalHostDirective_Factory","ɵPortalHostDirective_BaseFactory","PortalModule","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","VirtualScrollStrategy","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","behavior","scrollToOffset","setTotalContentSize","getDataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","renderedRange","getRenderedRange","newRange","end","viewportSize","dataLength","startBuffer","expandStart","ceil","endBuffer","expandEnd","floor","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","CdkFixedSizeVirtualScroll_Factory","DEFAULT_SCROLL_TIME","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","elementScrolled","scrollableReference","auditTimeInMs","_addGlobalListener","_removeGlobalListener","_","deregister","ancestors","getAncestorScrollContainers","target","scrollingContainers","_subscription","_scrollableContainsElement","doc","_getDocument","defaultView","scrollableElement","_getWindow","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","ngZone","_destroyed","_elementScrolled","register","options","el","_applyScrollToOptions","scrollTo","scrollTop","scrollLeft","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","ViewportScrollPosition","ViewportRuler","_change","_invalidateCache","_updateViewportSize","_viewportSize","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_changeDetectorRef","_detachedSubject","_renderedRangeSubject","_orientation","Promise","resolve","then","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_measureViewportSize","onContentScrolled","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","onDataLengthChanged","_doChangeDetection","_calculateSpacerSize","range","onContentRendered","to","isHorizontal","orientation","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","viewportEl","runAfter","markForCheck","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","ɵcmp","viewQuery","CdkVirtualScrollViewport_Query","rf","ctx","_t","first","hostAttrs","hostVars","hostBindings","CdkVirtualScrollViewport_HostBindings","ngContentSelectors","decls","vars","consts","CdkVirtualScrollViewport_Template","encapsulation","changeDetection","None","OnPush","getSize","node","rect","CdkVirtualForOf","_template","_differs","viewChange","_dataSourceChanges","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_templateCache","_needsUpdate","_onRenderedDataChange","renderedStartIndex","rangeLen","totalSize","view","j","diff","_renderedItems","_updateContext","_applyChanges","find","cdkVirtualForTrackBy","oldDs","newDs","disconnect","count","_updateComputedContextProperties","forEachOperation","record","adjustedPreviousIndex","currentIndex","previousIndex","_insertViewForNewItem","$implicit","item","_cacheView","_detachView","move","forEachIdentityChange","_insertViewFromCache","_createEmbeddedViewAt","last","even","odd","cdkVirtualForOf","_cdkVirtualForOf","cachedView","pop","insert","prototype","call","_cdkVirtualForTrackBy","CdkVirtualForOf_Factory","cdkVirtualForTemplate","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule","ScrollingModule_Factory","listenerOptions","passive","AutofillMonitor","_monitoredElements","elementOrRef","info","subject","result","animationName","isAutofilled","unlisten","_info","stopMonitoring","AutofillMonitor_Factory","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","monitor","CdkAutofill_Factory","CdkTextareaAutosize","_enabled","_previousMinRows","_textareaElement","_measuringClass","FIREFOX","minRows","_cachedLineHeight","maxRows","_initialHeight","resizeToFitContent","textareaClone","cloneNode","rows","visibility","border","padding","overflow","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","textarea","_minRows","_previousValue","placeholderText","placeholder","_scrollToCaretPosition","selectionStart","selectionEnd","isStopped","activeElement","setSelectionRange","_maxRows","reset","CdkTextareaAutosize_Factory","CdkTextareaAutosize_HostBindings","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","enabled","TextFieldModule","TextFieldModule_Factory","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButtonBase","_MatButtonMixinBase","MatButton","_focusMonitor","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","attr","_getHostElement","color","focusVia","disableRipple","disabled","attributes","attribute","hasAttribute","MatButton_Factory","MatButton_Query","ripple","MatButton_HostBindings","attrs","MatButton_Template","_isRippleDisabled","directives","String","MatAnchor","focusMonitor","animationMode","stopImmediatePropagation","MatAnchor_Factory","MatAnchor_HostBindings","MatAnchor_click_HostBindingHandler","$event","_haltDisabledEvents","tabIndex","toString","MatAnchor_Template","MatButtonModule","MatButtonModule_Factory","_c2","_c3","_c4","_c5","MatCardContent","MatCardContent_Factory","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","MatCardActions_HostBindings","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","MatCard_Factory","MatCard_HostBindings","MatCard_Template","MatCardHeader","MatCardHeader_Factory","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","MatCardModule_Factory","MatDivider","_vertical","_inset","MatDivider_Factory","MatDivider_HostBindings","vertical","inset","MatDivider_Template","MatDividerModule","MatDividerModule_Factory","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r84","_control","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r88","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r87","updateOutlineGap","ctx_r78","empty","_shouldAlwaysFloat","appearance","_labelId","_hasLabel","hideRequiredMarker","required","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r80","MatFormField_div_13_Template","ctx_r81","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r90","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r82","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","opacity","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MatFormFieldDefaultOptions","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","control","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","errorState","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","ids","_getDisplayedMessages","setDescribedByIds","labelEl","textContent","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerRect","containerStart","_getStartEnd","labelStart","labelWidth","child","getRootNode","_appearance","oldValue","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","contentQueries","MatFormField_ContentQueries","dirIndex","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","animation","descendants","animations","MatFormFieldModule","MatFormFieldModule_Factory","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","IconOptions","SvgIconConfig","nodeName","svgElement","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_defaultFontSetClass","addSvgIconInNamespace","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","sanitizedLiteral","sanitize","HTML","_createSvgElementForSingleIcon","addSvgIconSetInNamespace","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","_svgElementFromString","alias","className","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","iconKey","_getSvgFromConfig","iconSetConfigs","_getSvgFromIconSetConfigs","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","message","handleError","foundIcon","_extractSvgIconFromSet","_fetchUrl","svgText","responseText","_setSvgAttributes","iconSet","iconSource","querySelector","iconElement","removeAttribute","toLowerCase","_toSvgElement","str","div","innerHTML","childNodes","viewBox","inProgressFetch","req","responseType","configNamespace","MatIconRegistry_Factory","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","MatIconBase","_MatIconMixinBase","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","MatIconLocation","location","getPathname","pathname","search","funcIriAttributes","ɵ0","funcIriAttributeSelector","join","funcIriPattern","MatIcon","_iconRegistry","ariaHidden","_inline","_currentIconFetch","parts","svgIconChanges","svgIcon","_splitIconName","getNamedSvgIcon","_setSvgElement","previousValue","_clearSvgElement","_usingFontIcon","_updateFontIconClasses","cachedElements","_elementsWithExternalReferences","newPath","_previousPath","_prependPathToReferences","styleTags","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","elem","fontSetClass","fontSet","classNameForFontAlias","getDefaultFontSetClass","_previousFontSetClass","fontIcon","_previousFontIconClass","elementsWithFuncIri","elementWithReference","getAttribute","match","inline","_fontSet","_cleanupFontValue","_fontIcon","MatIcon_Factory","MatIcon_HostBindings","MatIcon_Template","MatIconModule","MatIconModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","_MatInputMixinBase","MatInput","inputValueAccessor","_uid","_disabled","_required","_type","_readonly","_neverEmptyInputTypes","_inputValueAccessor","_previousNativeValue","IOS","_isServer","_isNativeSelect","_isTextarea","multiple","updateErrorState","_dirtyCheckNativeValue","focus","isFocused","readonly","newValue","validity","badInput","_ariaDescribedby","_id","_validateType","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","label","MatInput_Factory","MatInput_HostBindings","MatInput_focus_HostBindingHandler","_focusChanged","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","errorStateMatcher","MatInputModule","MatInputModule_Factory","MatListOption_mat_pseudo_checkbox_2_Template","ctx_r26","MatListBase","_MatListMixinBase","MatListItemBase","_MatListItemMixinBase","MatNavList","arguments","_stateChanges","MatNavList_Factory","ɵMatNavList_BaseFactory","MatNavList_Template","MatList","_getListType","MatList_Factory","MatList_Template","MatListAvatarCssMatStyler","MatListAvatarCssMatStyler_Factory","MatListIconCssMatStyler","MatListIconCssMatStyler_Factory","MatListSubheaderCssMatStyler","MatListSubheaderCssMatStyler_Factory","MatListItem","_element","navList","list","_isInteractiveList","_list","_lines","MatListItem_Factory","MatListItem_ContentQueries","_avatar","_icon","MatListItem_HostBindings","MatListItem_Template","MatSelectionListBase","_MatSelectionListMixinBase","MatListOptionBase","_MatListOptionMixinBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","multi","MatSelectionListChange","option","MatListOption","_changeDetector","selectionList","_hasFocus","checkboxPosition","_inputsInitialized","_value","compareWith","_setSelected","wasSelected","hadFocus","newActiveItem","_removeOptionFromList","_text","toggle","_setFocusedOption","_onTouched","selectedOptions","_color","_reportValueChange","MatListOption_Factory","MatListOption_ContentQueries","MatListOption_Query","MatListOption_HostBindings","MatListOption_focus_HostBindingHandler","_handleFocus","MatListOption_blur_HostBindingHandler","_handleBlur","MatListOption_click_HostBindingHandler","_handleClick","MatListOption_Template","_contentInitialized","selectionChange","_tabIndex","_onChange","_keyManager","withWrap","withTypeAhead","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","_updateTabIndex","disableRippleChanges","colorChanges","firstChange","_markOptionsForCheck","_isDestroyed","_setAllOptionsSelected","updateActiveItem","optionIndex","_getOptionIndex","activeItemIndex","activeItem","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","setFirstItemActive","setLastItemActive","shouldSelect","onKeydown","shiftKey","_getSelectedOptionValues","activeIndex","setActiveItem","isDisabled","correspondingOption","focusedIndex","_isValidIndex","focusedOption","toArray","skipDisabled","hasChanged","_markForCheck","MatSelectionList_Factory","MatSelectionList_ContentQueries","MatSelectionList_HostBindings","MatSelectionList_focus_HostBindingHandler","_onFocus","MatSelectionList_keydown_HostBindingHandler","_keydown","MatSelectionList_Template","MatListModule","MatListModule_Factory","MatDrawerContainer_div_0_Template","_r4","MatDrawerContainer_div_0_Template_div_click_0_listener","ctx_r3","_onBackdropClicked","ctx_r1","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","MatSidenavContainer_div_0_Template","_r8","MatSidenavContainer_div_0_Template_div_click_0_listener","ctx_r7","ctx_r5","MatSidenavContainer_mat_sidenav_content_3_Template","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","_contentMarginChanges","MatDrawerContent_Factory","MatDrawerContainer","MatDrawerContent_HostBindings","_contentMargins","MatDrawerContent_Template","MatDrawer","_focusTrapFactory","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","onPositionChanged","_modeChanged","opened","_takeFocus","_restoreFocus","disableClose","stopPropagation","fromState","toState","autoFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","activeEl","_openedVia","blur","_updateFocusTrapState","openedVia","isOpen","mode","_autoFocus","o","MatDrawer_Factory","MatDrawer_HostBindings","MatDrawer_animation_transform_start_HostBindingHandler","_animationStartListener","MatDrawer_animation_transform_done_HostBindingHandler","_animationDoneListener","_openedStream","openedStart","_closedStream","closedStart","MatDrawer_Template","defaultAutosize","_drawers","_doCheckSubject","_validateDrawers","updateContentMargins","_autosize","_allDrawers","drawer","notifyOnChanges","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_start","_end","_left","_right","_setContainerClass","onMicrotaskEmpty","_closeModalDrawer","_canHaveBackdrop","_backdropOverride","_userContent","_content","MatDrawerContainer_Factory","MatDrawerContainer_ContentQueries","MatDrawerContainer_Query","MatDrawerContainer_HostBindings","autosize","MatDrawerContainer_Template","MatSidenavContent","changeDetectorRef","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","MatSidenav_Factory","ɵMatSidenav_BaseFactory","MatSidenav_HostBindings","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenav_Template","MatSidenavContainer_Factory","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","SimpleSnackBar_div_2_Template","_r146","SimpleSnackBar_div_2_Template_button_click_1_listener","ctx_r145","action","ctx_r144","MatSnackBarContainer_ng_template_0_Template","MatSnackBarDismiss","MAX_TIMEOUT","pow","MatSnackBarRef","containerInstance","_afterDismissed","_afterOpened","_onAction","_dismissedByAction","onAction","dismiss","_onExit","_finishDismiss","closed","exit","_durationTimeoutId","dismissWithAction","duration","dismissedByAction","_onEnter","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","horizontalPosition","verticalPosition","SimpleSnackBar","snackBarRef","SimpleSnackBar_Factory","SimpleSnackBar_Template","hasAction","matSnackBarAnimations","snackBarState","MatSnackBarContainer","snackBarConfig","_assertNotAttached","_applySnackBarClasses","_role","_completeExit","onEnter","panelClasses","isArray","MatSnackBarContainer_Factory","MatSnackBarContainer_Query","MatSnackBarContainer_HostBindings","MatSnackBarContainer_animation_state_done_HostBindingHandler","onAnimationEnd","MatSnackBarContainer_Template","Default","MatSnackBarModule","MatSnackBarModule_Factory","entryComponents","MAT_SNACK_BAR_DEFAULT_OPTIONS","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MatSnackBar","_live","_breakpointObserver","_parentSnackBar","_defaultConfig","_snackBarRefAtThisLevel","_attach","openFromComponent","_openedSnackBarRef","userInjector","WeakMap","containerPortal","containerRef","instance","content","userConfig","_attachSnackBarContainer","_createInjector","contentRef","observe","detachments","_animateSnackBar","afterDismissed","enter","afterOpened","_dismissAfter","announce","global","isLeft","isRight","centerHorizontally","MatSnackBar_Factory","MatToolbarBase","_MatToolbarMixinBase","MatToolbarRow","MatToolbarRow_Factory","MatToolbar","_checkToolbarMixedModes","_toolbarRows","isCombinedUsage","COMMENT_NODE","throwToolbarMixedModesError","MatToolbar_Factory","MatToolbar_ContentQueries","MatToolbar_HostBindings","MatToolbar_Template","MatToolbarModule","MatToolbarModule_Factory","modules","MaterialModule"],"mappings":"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","file":"default~admin-admin-module~web-web-module-es5.js","sourcesContent":["import { isObservable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\nif (false) {\n    /**\n     * Connects a collection viewer (such as a data-table) to this data source. Note that\n     * the stream provided will be accessed during change detection and should not directly change\n     * values that are bound in template views.\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?} Observable that emits a new value when the data changes.\n     */\n    DataSource.prototype.connect = function (collectionViewer) { };\n    /**\n     * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n     * to perform any clean-up or tear-down operations when a view is being destroyed.\n     *\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?}\n     */\n    DataSource.prototype.disconnect = function (collectionViewer) { };\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/array-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ArrayDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/collection-viewer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for any component that provides a view of some data collection and wants to provide\n * information regarding the view and any changes made.\n * @record\n */\nfunction CollectionViewer() { }\nif (false) {\n    /**\n     * A stream that emits whenever the `CollectionViewer` starts looking at a new portion of the\n     * data. The `start` index is inclusive, while the `end` is exclusive.\n     * @type {?}\n     */\n    CollectionViewer.prototype.viewChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/selection-model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\nif (false) {\n    /**\n     * Currently-selected values.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selection;\n    /**\n     * Keeps track of the deselected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._deselectedToEmit;\n    /**\n     * Keeps track of the selected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selectedToEmit;\n    /**\n     * Cache for the array value of the selected items.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selected;\n    /**\n     * Event emitted when the value has changed.\n     * @type {?}\n     */\n    SelectionModel.prototype.changed;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._emitChanges;\n}\n/**\n * Event emitted when the value of a MatSelectionModel has changed.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction SelectionChange() { }\nif (false) {\n    /**\n     * Model that dispatched the event.\n     * @type {?}\n     */\n    SelectionChange.prototype.source;\n    /**\n     * Options that were added to the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.added;\n    /**\n     * Options that were removed from the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.removed;\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/unique-selection-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\n/** @nocollapse */ UniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    UniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/tree-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for a class that can flatten hierarchical structured data and re-expand the flattened\n * data back into its original structure. Should be used in conjunction with the cdk-tree.\n * @record\n * @template T\n */\nfunction TreeDataNodeFlattener() { }\nif (false) {\n    /**\n     * Transforms a set of hierarchical structured data into a flattened data array.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.flattenNodes = function (structuredData) { };\n    /**\n     * Expands a flattened array of data into its hierarchical form using the provided expansion\n     * model.\n     * @param {?} nodes\n     * @param {?} expansionModel\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.expandFlattenedNodes = function (nodes, expansionModel) { };\n    /**\n     * Put node descendants of node in array.\n     * If `onlyExpandable` is true, then only process expandable descendants.\n     * @param {?} node\n     * @param {?} nodes\n     * @param {?} onlyExpandable\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.nodeDescendents = function (node, nodes, onlyExpandable) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, getMultipleValuesInSingleSelectionError, isDataSource };\n\n//# sourceMappingURL=collections.js.map","import { NgModule, Injectable, ɵɵdefineInjectable, ɵɵinject, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/layout-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/media-matcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Global registry for all dynamically-created, injected media queries.\n * @type {?}\n */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/**\n * Style tag that holds all of the dynamically-created media queries.\n * @type {?}\n */\nlet mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nclass MediaMatcher {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ MediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * The internal matchMedia method to return back a MediaQueryList like object.\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._matchMedia;\n    /**\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._platform;\n}\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            (/** @type {?} */ (document.head)).appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            ((/** @type {?} */ (mediaQueryStyleNode.sheet)))\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return (/** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: (/**\n         * @return {?}\n         */\n        () => { }),\n        removeListener: (/**\n         * @return {?}\n         */\n        () => { })\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction BreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    BreakpointState.prototype.matches;\n    /**\n     * A key boolean pair for each query provided to the observe method,\n     * with its current matched state.\n     * @type {?}\n     */\n    BreakpointState.prototype.breakpoints;\n}\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction InternalBreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.matches;\n    /**\n     * The media query being to be matched\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.query;\n}\n/**\n * @record\n */\nfunction Query() { }\nif (false) {\n    /** @type {?} */\n    Query.prototype.observable;\n    /** @type {?} */\n    Query.prototype.mql;\n}\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nclass BreakpointObserver {\n    /**\n     * @param {?} _mediaMatcher\n     * @param {?} _zone\n     */\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isMatched(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        return queries.some((/**\n         * @param {?} mediaQuery\n         * @return {?}\n         */\n        mediaQuery => this._registerQuery(mediaQuery).mql.matches));\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    observe(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        /** @type {?} */\n        const observables = queries.map((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => this._registerQuery(query).observable));\n        /** @type {?} */\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map((/**\n         * @param {?} breakpointStates\n         * @return {?}\n         */\n        (breakpointStates) => {\n            /** @type {?} */\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach((/**\n             * @param {?} state\n             * @return {?}\n             */\n            (state) => {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            }));\n            return response;\n        })));\n    }\n    /**\n     * Registers a specific query to be listened for.\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return (/** @type {?} */ (this._queries.get(query)));\n        }\n        /** @type {?} */\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        /** @type {?} */\n        const queryObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            /** @type {?} */\n            const handler = (/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => this._zone.run((/**\n             * @return {?}\n             */\n            () => observer.next(e))));\n            mql.addListener(handler);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                mql.removeListener(handler);\n            });\n        })).pipe(startWith(mql), map((/**\n         * @param {?} nextMql\n         * @return {?}\n         */\n        (nextMql) => ({ query, matches: nextMql.matches }))), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        /** @type {?} */\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/** @nocollapse */ BreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * A map of all media queries currently being listened for.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._queries;\n    /**\n     * A subject for all other observables to takeUntil based on.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._destroySubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._mediaMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._zone;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    (query) => query.split(',')))\n        .reduce((/**\n     * @param {?} a1\n     * @param {?} a2\n     * @return {?}\n     */\n    (a1, a2) => a1.concat(a2)))\n        .map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    query => query.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, Optional, SkipSelf, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/block-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} document\n     */\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    attach() { }\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    enable() {\n        if (this._canBeEnabled()) {\n            /** @type {?} */\n            const root = (/** @type {?} */ (this._document.documentElement));\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    disable() {\n        if (this._isEnabled) {\n            /** @type {?} */\n            const html = (/** @type {?} */ (this._document.documentElement));\n            /** @type {?} */\n            const body = (/** @type {?} */ (this._document.body));\n            /** @type {?} */\n            const htmlStyle = (/** @type {?} */ (html.style));\n            /** @type {?} */\n            const bodyStyle = (/** @type {?} */ (body.style));\n            /** @type {?} */\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            /** @type {?} */\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        /** @type {?} */\n        const html = (/** @type {?} */ (this._document.documentElement));\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousHTMLStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousScrollPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._isEnabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes a strategy that will be used by an overlay to handle scroll events while it is open.\n * @record\n */\nfunction ScrollStrategy() { }\nif (false) {\n    /**\n     * Enable this scroll strategy (called when the attached overlay is attached to a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.enable;\n    /**\n     * Disable this scroll strategy (called when the attached overlay is detached from a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.disable;\n    /**\n     * Attaches this `ScrollStrategy` to an overlay.\n     * @type {?}\n     */\n    ScrollStrategy.prototype.attach;\n    /**\n     * Detaches the scroll strategy from the current overlay.\n     * @type {?|undefined}\n     */\n    ScrollStrategy.prototype.detach;\n}\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/close-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the CloseScrollStrategy.\n * @record\n */\nfunction CloseScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Amount of pixels the user has to scroll before the overlay is closed.\n     * @type {?|undefined}\n     */\n    CloseScrollStrategyConfig.prototype.threshold;\n}\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = (/**\n         * @return {?}\n         */\n        () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this._overlayRef.detach()));\n            }\n        });\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        /** @type {?} */\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > (/** @type {?} */ ((/** @type {?} */ (this._config)).threshold))) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            }));\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._initialScrollPosition;\n    /**\n     * Detaches the overlay ref and disables the scroll strategy.\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._detach;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/noop-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Scroll strategy that doesn't do anything.\n */\nclass NoopScrollStrategy {\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    enable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    disable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    attach() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/scroll-clip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} containerBounds\n     * @return {?}\n     */\n    containerBounds => {\n        /** @type {?} */\n        const outsideAbove = element.bottom < containerBounds.top;\n        /** @type {?} */\n        const outsideBelow = element.top > containerBounds.bottom;\n        /** @type {?} */\n        const outsideLeft = element.right < containerBounds.left;\n        /** @type {?} */\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    }));\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} scrollContainerRect\n     * @return {?}\n     */\n    scrollContainerRect => {\n        /** @type {?} */\n        const clippedAbove = element.top < scrollContainerRect.top;\n        /** @type {?} */\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        /** @type {?} */\n        const clippedLeft = element.left < scrollContainerRect.left;\n        /** @type {?} */\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/reposition-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the RepositionScrollStrategy.\n * @record\n */\nfunction RepositionScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Time in milliseconds to throttle the scroll events.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.scrollThrottle;\n    /**\n     * Whether to close the overlay once the user has scrolled away completely.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.autoClose;\n}\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (!this._scrollSubscription) {\n            /** @type {?} */\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    /** @type {?} */\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    /** @type {?} */\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._overlayRef.detach()));\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?} document\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = (/**\n         * @return {?}\n         */\n        () => new NoopScrollStrategy());\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config));\n        /**\n         * Block scrolling.\n         */\n        this.block = (/**\n         * @return {?}\n         */\n        () => new BlockScrollStrategy(this._viewportRuler, this._document));\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config));\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._document;\n    /**\n     * Do nothing on scroll.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.noop;\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.close;\n    /**\n     * Block scrolling.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.block;\n    /**\n     * Update the overlay's position on scroll.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.reposition;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nclass OverlayConfig {\n    /**\n     * @param {?=} config\n     */\n    constructor(config) {\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            /** @type {?} */\n            const configKeys = (/** @type {?} */ (Object.keys(config)));\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = (/** @type {?} */ (config[key]));\n                }\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * Strategy with which to position the overlay.\n     * @type {?}\n     */\n    OverlayConfig.prototype.positionStrategy;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    OverlayConfig.prototype.scrollStrategy;\n    /**\n     * Custom class to add to the overlay pane.\n     * @type {?}\n     */\n    OverlayConfig.prototype.panelClass;\n    /**\n     * Whether the overlay has a backdrop.\n     * @type {?}\n     */\n    OverlayConfig.prototype.hasBackdrop;\n    /**\n     * Custom class to add to the backdrop\n     * @type {?}\n     */\n    OverlayConfig.prototype.backdropClass;\n    /**\n     * The width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.width;\n    /**\n     * The height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.height;\n    /**\n     * The min-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minWidth;\n    /**\n     * The min-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minHeight;\n    /**\n     * The max-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxWidth;\n    /**\n     * The max-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxHeight;\n    /**\n     * Direction of the text in the overlay panel. If a `Directionality` instance\n     * is passed in, the overlay will handle changes to its value automatically.\n     * @type {?}\n     */\n    OverlayConfig.prototype.direction;\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    OverlayConfig.prototype.disposeOnNavigation;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A connection point on the origin element.\n * @record\n */\nfunction OriginConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originX;\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originY;\n}\n/**\n * A connection point on the overlay element.\n * @record\n */\nfunction OverlayConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayX;\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayY;\n}\n/**\n * The points of the origin element and the overlay element to connect.\n */\nclass ConnectionPositionPair {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @param {?=} panelClass\n     */\n    constructor(origin, overlay, offsetX, offsetY, panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\nif (false) {\n    /**\n     * X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originX;\n    /**\n     * Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originY;\n    /**\n     * X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayX;\n    /**\n     * Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayY;\n    /**\n     * Offset along the X axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetX;\n    /**\n     * Offset along the Y axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetY;\n    /**\n     * Class(es) to be applied to the panel while this position is active.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.panelClass;\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nclass ScrollingVisibility {\n}\nif (false) {\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginOutsideView;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayOutsideView;\n}\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nclass ConnectedOverlayPositionChange {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    constructor(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/** @nocollapse */\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\nif (false) {\n    /**\n     * The position used as a result of this change.\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.connectionPair;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.scrollableViewProperties;\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/keyboard/overlay-keyboard-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        });\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._detach();\n    }\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    }\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    remove(overlayRef) {\n        /** @type {?} */\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    }\n    /**\n     * Detaches the global keyboard event listener.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Currently attached overlays in the order they were attached.\n     * @type {?}\n     */\n    OverlayKeyboardDispatcher.prototype._attachedOverlays;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._isAttached;\n    /**\n     * Keyboard event listener that will be attached to the body.\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._keydownListener;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        (/** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT))\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n * @type {?}\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(((/** @type {?} */ (window))).__karma__ || ((/** @type {?} */ (window))).jasmine);\n/**\n * Container inside which all overlays will render.\n */\nclass OverlayContainer {\n    /**\n     * @param {?} document\n     * @param {?=} _platform\n     */\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        // @breaking-change 10.0.0 Remove null check for `_platform`.\n        /** @type {?} */\n        const isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n        /** @type {?} */\n        const containerClass = 'cdk-overlay-container';\n        if (isBrowser || isTestEnvironment) {\n            /** @type {?} */\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                (/** @type {?} */ (oppositePlatformContainers[i].parentNode)).removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        /** @type {?} */\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ OverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._containerElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._document;\n    /**\n     * @deprecated `platform` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._platform;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    /**\n     * @param {?} _portalOutlet\n     * @param {?} _host\n     * @param {?} _pane\n     * @param {?} _config\n     * @param {?} _ngZone\n     * @param {?} _keyboardDispatcher\n     * @param {?} _document\n     * @param {?=} _location\n     */\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._backdropClick.next(event));\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /**\n     * The overlay's HTML element\n     * @return {?}\n     */\n    get overlayElement() {\n        return this._pane;\n    }\n    /**\n     * The overlay's backdrop HTML element.\n     * @return {?}\n     */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     * @return {?}\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    attach(portal) {\n        /** @type {?} */\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }));\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe((/**\n             * @return {?}\n             */\n            () => this.dispose()));\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        /** @type {?} */\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    }\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        /** @type {?} */\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = (/** @type {?} */ (null));\n        }\n        this._previousHostParent = this._pane = (/** @type {?} */ (null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._backdropClick.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    attachments() {\n        return this._attachments.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    detachments() {\n        return this._detachments.asObservable();\n    }\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._keydownEvents.asObservable();\n    }\n    /**\n     * Gets the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * Switches to a new position strategy and updates the overlay position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    getDirection() {\n        /** @type {?} */\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /**\n     * Switches to a new scroll strategy.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /**\n     * Updates the text direction of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @private\n     * @return {?}\n     */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        /** @type {?} */\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @private\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /**\n     * Attaches a backdrop for this overlay.\n     * @private\n     * @return {?}\n     */\n    _attachBackdrop() {\n        /** @type {?} */\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        (/** @type {?} */ (this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                }));\n            }));\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @private\n     * @return {?}\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            (/** @type {?} */ (this._host.parentNode)).appendChild(this._host);\n        }\n    }\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    detachBackdrop() {\n        /** @type {?} */\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        /** @type {?} */\n        let timeoutId;\n        /** @type {?} */\n        let finishDetach = (/**\n         * @return {?}\n         */\n        () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses((/** @type {?} */ (backdropToDetach)), this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        });\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (backdropToDetach)).addEventListener('transitionend', finishDetach);\n        }));\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(finishDetach, 500)));\n    }\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @private\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _toggleClasses(element, cssClasses, isAdd) {\n        /** @type {?} */\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach((/**\n         * @param {?} cssClass\n         * @return {?}\n         */\n        cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        }));\n    }\n    /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @private\n     * @return {?}\n     */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            /** @type {?} */\n            const subscription = this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            }));\n        }));\n    }\n    /**\n     * Disposes of a scroll strategy.\n     * @private\n     * @return {?}\n     */\n    _disposeScrollStrategy() {\n        /** @type {?} */\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClick;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._attachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._detachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._positionStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._scrollStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._locationChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClickHandler;\n    /**\n     * Reference to the parent of the `_host` at the time it was detached. Used to restore\n     * the `_host` to its original position in the DOM when it gets re-attached.\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._previousHostParent;\n    /**\n     * Stream of keydown events dispatched to this overlay.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEvents;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._portalOutlet;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._host;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._pane;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._location;\n}\n/**\n * Size properties for an overlay.\n * @record\n */\nfunction OverlaySizeConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.width;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.height;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minHeight;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/flexible-connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/**\n * Class to be added to the overlay bounding box.\n * @type {?}\n */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /**\n     * @param {?} connectedTo\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this._scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n         */\n        this._appliedPanelClasses = [];\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        }));\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        const originRect = this._originRect;\n        /** @type {?} */\n        const overlayRect = this._overlayRect;\n        /** @type {?} */\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        /** @type {?} */\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        /** @type {?} */\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            /** @type {?} */\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            /** @type {?} */\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            /** @type {?} */\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            /** @type {?} */\n            let bestFit = null;\n            /** @type {?} */\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                /** @type {?} */\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition((/** @type {?} */ (bestFit)).position, (/** @type {?} */ (bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, (/** @type {?} */ ({\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            })));\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            /** @type {?} */\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            /** @type {?} */\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} scrollables\n     * @return {THIS}\n     */\n    withScrollableContainers(scrollables) {\n        (/** @type {?} */ (this))._scrollables = scrollables;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Adds new preferred positions.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions List of positions options for this overlay.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf((/** @type {?} */ ((/** @type {?} */ (this))._lastPosition))) === -1) {\n            (/** @type {?} */ (this))._lastPosition = null;\n        }\n        (/** @type {?} */ (this))._validatePositions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {THIS}\n     */\n    withViewportMargin(margin) {\n        (/** @type {?} */ (this))._viewportMargin = margin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} flexibleDimensions\n     * @return {THIS}\n     */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        (/** @type {?} */ (this))._hasFlexibleDimensions = flexibleDimensions;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} growAfterOpen\n     * @return {THIS}\n     */\n    withGrowAfterOpen(growAfterOpen = true) {\n        (/** @type {?} */ (this))._growAfterOpen = growAfterOpen;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} canPush\n     * @return {THIS}\n     */\n    withPush(canPush = true) {\n        (/** @type {?} */ (this))._canPush = canPush;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked = true) {\n        (/** @type {?} */ (this))._positionLocked = isLocked;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetX(offset) {\n        (/** @type {?} */ (this))._offsetX = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetY(offset) {\n        (/** @type {?} */ (this))._offsetY = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {THIS}\n     */\n    withTransformOriginOn(selector) {\n        (/** @type {?} */ (this))._transformOriginSelector = selector;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @private\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOriginPoint(originRect, pos) {\n        /** @type {?} */\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            /** @type {?} */\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            /** @type {?} */\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        /** @type {?} */\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @private\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        /** @type {?} */\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        /** @type {?} */\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @private\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        /** @type {?} */\n        let leftOverflow = 0 - x;\n        /** @type {?} */\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        /** @type {?} */\n        let topOverflow = 0 - y;\n        /** @type {?} */\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        /** @type {?} */\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        /** @type {?} */\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        /** @type {?} */\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @private\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            /** @type {?} */\n            const availableHeight = viewport.bottom - point.y;\n            /** @type {?} */\n            const availableWidth = viewport.right - point.x;\n            /** @type {?} */\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            /** @type {?} */\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            /** @type {?} */\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            /** @type {?} */\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @private\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        /** @type {?} */\n        const overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        /** @type {?} */\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        /** @type {?} */\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        /** @type {?} */\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        /** @type {?} */\n        let pushX = 0;\n        /** @type {?} */\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @private\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            /** @type {?} */\n            const scrollableViewProperties = this._getScrollVisibility();\n            /** @type {?} */\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        /** @type {?} */\n        const elements = (/** @type {?} */ (this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        /** @type {?} */\n        let xOrigin;\n        /** @type {?} */\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @private\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        let height;\n        /** @type {?} */\n        let top;\n        /** @type {?} */\n        let bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            /** @type {?} */\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        /** @type {?} */\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        /** @type {?} */\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        /** @type {?} */\n        let width;\n        /** @type {?} */\n        let left;\n        /** @type {?} */\n        let right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            /** @type {?} */\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: (/** @type {?} */ (top)), left: (/** @type {?} */ (left)), bottom: (/** @type {?} */ (bottom)), right: (/** @type {?} */ (right)), width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @private\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    _setBoundingBoxStyles(origin, position) {\n        /** @type {?} */\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            /** @type {?} */\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            /** @type {?} */\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, styles);\n    }\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetBoundingBoxStyles() {\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, (/** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        })));\n    }\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, (/** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        })));\n    }\n    /**\n     * Sets positioning styles to the overlay element.\n     * @private\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    _setOverlayElementStyles(originPoint, position) {\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        /** @type {?} */\n        const hasExactPosition = this._hasExactPosition();\n        /** @type {?} */\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            /** @type {?} */\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        /** @type {?} */\n        let transformString = '';\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ top: '', bottom: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            /** @type {?} */\n            const documentHeight = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ left: '', right: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        /** @type {?} */\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            /** @type {?} */\n            const documentWidth = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @private\n     * @return {?}\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        /** @type {?} */\n        const originBounds = this._getOriginRect();\n        /** @type {?} */\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        /** @type {?} */\n        const scrollContainerBounds = this._scrollables.map((/**\n         * @param {?} scrollable\n         * @return {?}\n         */\n        scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        }));\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from its length.\n     * @private\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((/**\n         * @param {?} currentValue\n         * @param {?} currentOverflow\n         * @return {?}\n         */\n        (currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }), length);\n    }\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @private\n     * @return {?}\n     */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        /** @type {?} */\n        const width = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n        /** @type {?} */\n        const height = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n        /** @type {?} */\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @private\n     * @return {?}\n     */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @private\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /**\n     * Validates that the current position match the expected values.\n     * @private\n     * @return {?}\n     */\n    _validatePositions() {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach((/**\n         * @param {?} pair\n         * @return {?}\n         */\n        pair => {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        }));\n    }\n    /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @private\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            }));\n        }\n    }\n    /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                this._pane.classList.remove(cssClass);\n            }));\n            this._appliedPanelClasses = [];\n        }\n    }\n    /**\n     * Returns the ClientRect of the current origin.\n     * @private\n     * @return {?}\n     */\n    _getOriginRect() {\n        /** @type {?} */\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        /** @type {?} */\n        const width = origin.width || 0;\n        /** @type {?} */\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * Whether we're performing the very first positioning of the overlay.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isInitialRender;\n    /**\n     * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastBoundingBoxSize;\n    /**\n     * Whether the overlay was pushed in a previous positioning.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isPushed;\n    /**\n     * Whether the overlay can be pushed on-screen on the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._canPush;\n    /**\n     * Whether the overlay can grow via flexible width/height after the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._growAfterOpen;\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._hasFlexibleDimensions;\n    /**\n     * Whether the overlay position is locked.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionLocked;\n    /**\n     * Cached origin dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._originRect;\n    /**\n     * Cached overlay dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRect;\n    /**\n     * Cached viewport dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRect;\n    /**\n     * Amount of space that must be maintained between the overlay and the edge of the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportMargin;\n    /**\n     * The Scrollable containers used to check scrollable view properties on position change.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._scrollables;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._preferredPositions;\n    /**\n     * The origin element against which the overlay will be positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._origin;\n    /**\n     * The overlay pane element.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._pane;\n    /**\n     * Whether the strategy has been disposed of already.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isDisposed;\n    /**\n     * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n     * within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._boundingBox;\n    /**\n     * The last position to have been calculated as the best fit position.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastPosition;\n    /**\n     * Subject that emits whenever the position changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionChanges;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._resizeSubscription;\n    /**\n     * Default offset for the overlay along the x axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetX;\n    /**\n     * Default offset for the overlay along the y axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetY;\n    /**\n     * Selector to be used when finding the elements on which to set the transform origin.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._transformOriginSelector;\n    /**\n     * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._appliedPanelClasses;\n    /**\n     * Amount by which the overlay was pushed in each axis during the last time it was positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._previousPushAmount;\n    /**\n     * Observable sequence of position changes.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.positionChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayContainer;\n}\n/**\n * A simple (x, y) coordinate.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Record of measurements for how an overlay (at a given position) fits into the viewport.\n * @record\n */\nfunction OverlayFit() { }\nif (false) {\n    /**\n     * Whether the overlay fits completely in the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.isCompletelyWithinViewport;\n    /**\n     * Whether the overlay fits in the viewport on the y-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportVertically;\n    /**\n     * Whether the overlay fits in the viewport on the x-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportHorizontally;\n    /**\n     * The total visible area (in px^2) of the overlay inside the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.visibleArea;\n}\n/**\n * Record of the measurments determining whether an overlay will fit in a specific position.\n * @record\n */\nfunction FallbackPosition() { }\nif (false) {\n    /** @type {?} */\n    FallbackPosition.prototype.position;\n    /** @type {?} */\n    FallbackPosition.prototype.originPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayFit;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayRect;\n}\n/**\n * Position and size of the overlay sizing wrapper for a specific position.\n * @record\n */\nfunction BoundingBoxRect() { }\nif (false) {\n    /** @type {?} */\n    BoundingBoxRect.prototype.top;\n    /** @type {?} */\n    BoundingBoxRect.prototype.left;\n    /** @type {?} */\n    BoundingBoxRect.prototype.bottom;\n    /** @type {?} */\n    BoundingBoxRect.prototype.right;\n    /** @type {?} */\n    BoundingBoxRect.prototype.height;\n    /** @type {?} */\n    BoundingBoxRect.prototype.width;\n}\n/**\n * Record of measures determining how well a given position will fit with flexible dimensions.\n * @record\n */\nfunction FlexibleFit() { }\nif (false) {\n    /** @type {?} */\n    FlexibleFit.prototype.position;\n    /** @type {?} */\n    FlexibleFit.prototype.origin;\n    /** @type {?} */\n    FlexibleFit.prototype.overlayRect;\n    /** @type {?} */\n    FlexibleFit.prototype.boundingBoxRect;\n}\n/**\n * A connected position as specified by the user.\n * @record\n */\nfunction ConnectedPosition() { }\nif (false) {\n    /** @type {?} */\n    ConnectedPosition.prototype.originX;\n    /** @type {?} */\n    ConnectedPosition.prototype.originY;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayX;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.weight;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetX;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.panelClass;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n * @param {?} input\n * @return {?}\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    /**\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?} connectedTo\n     * @param {?} viewportRuler\n     * @param {?} document\n     * @param {?} platform\n     * @param {?} overlayContainer\n     */\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    get _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Emits an event when the connection point changes.\n     * @return {?}\n     */\n    get onPositionChange() {\n        return this._positionStrategy.positionChanges;\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {THIS}\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        /** @type {?} */\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        (/** @type {?} */ (this))._preferredPositions.push(position);\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} dir New layout direction.\n     * @return {THIS}\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.setDirection(dir);\n        }\n        else {\n            (/** @type {?} */ (this))._direction = dir;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withOffsetX(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetX(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withOffsetY(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetY(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked) {\n        (/** @type {?} */ (this))._positionStrategy.withLockedPosition(isLocked);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions.slice();\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin element.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._positionStrategy.setOrigin(origin);\n        return (/** @type {?} */ (this));\n    }\n}\nif (false) {\n    /**\n     * Reference to the underlying position strategy to which all the API calls are proxied.\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._positionStrategy;\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._direction;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._preferredPositions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/global-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be added to the overlay pane wrapper.\n * @type {?}\n */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        /** @type {?} */\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New top offset.\n     * @return {THIS}\n     */\n    top(value = '') {\n        (/** @type {?} */ (this))._bottomOffset = '';\n        (/** @type {?} */ (this))._topOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New left offset.\n     * @return {THIS}\n     */\n    left(value = '') {\n        (/** @type {?} */ (this))._rightOffset = '';\n        (/** @type {?} */ (this))._leftOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New bottom offset.\n     * @return {THIS}\n     */\n    bottom(value = '') {\n        (/** @type {?} */ (this))._topOffset = '';\n        (/** @type {?} */ (this))._bottomOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New right offset.\n     * @return {THIS}\n     */\n    right(value = '') {\n        (/** @type {?} */ (this))._leftOffset = '';\n        (/** @type {?} */ (this))._rightOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New width for the overlay\n     * @return {THIS}\n     */\n    width(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ width: value });\n        }\n        else {\n            (/** @type {?} */ (this))._width = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New height for the overlay\n     * @return {THIS}\n     */\n    height(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ height: value });\n        }\n        else {\n            (/** @type {?} */ (this))._height = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {THIS}\n     */\n    centerHorizontally(offset = '') {\n        (/** @type {?} */ (this)).left(offset);\n        (/** @type {?} */ (this))._justifyContent = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {THIS}\n     */\n    centerVertically(offset = '') {\n        (/** @type {?} */ (this)).top(offset);\n        (/** @type {?} */ (this))._alignItems = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parentStyles = this._overlayRef.hostElement.style;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        /** @type {?} */\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        /** @type {?} */\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * \\@docs-private\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parent = this._overlayRef.hostElement;\n        /** @type {?} */\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._cssPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._topOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._bottomOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._leftOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._rightOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._alignItems;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._justifyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._width;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._height;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._isDisposed;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/overlay-position-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nclass OverlayPositionBuilder {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} origin Origin relative to which to position the overlay.\n     * @return {?}\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\n/** @nocollapse */\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/** @nocollapse */ OverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._overlayContainer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Next overlay unique ID.\n * @type {?}\n */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    /**\n     * @param {?} scrollStrategies\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _keyboardDispatcher\n     * @param {?} _injector\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _directionality\n     * @param {?=} _location\n     */\n    constructor(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    create(config) {\n        /** @type {?} */\n        const host = this._createHostElement();\n        /** @type {?} */\n        const pane = this._createPaneElement(host);\n        /** @type {?} */\n        const portalOutlet = this._createPortalOutlet(pane);\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @private\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    _createPaneElement(host) {\n        /** @type {?} */\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @private\n     * @return {?} Newly-create host element.\n     */\n    _createHostElement() {\n        /** @type {?} */\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @private\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\n/** @nocollapse */\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._appRef;\n    /**\n     * Scrolling strategies that can be used when creating an overlay.\n     * @type {?}\n     */\n    Overlay.prototype.scrollStrategies;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._overlayContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._positionBuilder;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._directionality;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._location;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n * @type {?}\n */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @param {?=} config\n     * @return {?}\n     */\n    (config) => overlay.scrollStrategies.reposition(config));\n}\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\n/** @nocollapse */\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    CdkOverlayOrigin.prototype.elementRef;\n}\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} scrollStrategyFactory\n     * @param {?} _dir\n     */\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        /**\n         * Emits when there are keyboard events that are targeted at the overlay.\n         */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the x-axis\n     * @return {?}\n     */\n    get offsetX() { return this._offsetX; }\n    /**\n     * @param {?} offsetX\n     * @return {?}\n     */\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the y-axis\n     * @return {?}\n     */\n    get offsetY() { return this._offsetY; }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * Whether or not the overlay should attach a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /**\n     * Whether or not the overlay should be locked when scrolling.\n     * @return {?}\n     */\n    get lockPosition() { return this._lockPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @return {?}\n     */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n     * @return {?}\n     */\n    get growAfterOpen() { return this._growAfterOpen; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @return {?}\n     */\n    get push() { return this._push; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /**\n     * The associated overlay reference.\n     * @return {?}\n     */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /**\n     * The element's layout direction.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /**\n     * Creates an overlay\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n        this._overlayRef.keydownEvents().subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        }));\n    }\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @private\n     * @return {?}\n     */\n    _buildConfig() {\n        /** @type {?} */\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /**\n     * Updates the state of a position strategy, based on the values of the directive inputs.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _updatePositionStrategy(positionStrategy) {\n        /** @type {?} */\n        const positions = this.positions.map((/**\n         * @param {?} currentPosition\n         * @return {?}\n         */\n        currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        })));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @private\n     * @return {?}\n     */\n    _createPositionStrategy() {\n        /** @type {?} */\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        strategy.positionChanges.subscribe((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => this.positionChange.emit(p)));\n        return strategy;\n    }\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.backdropClick.emit(event);\n            }));\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_lockPosition;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_flexibleDimensions;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_growAfterOpen;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._templatePortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._lockPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._growAfterOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._flexibleDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._backdropSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetX;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetY;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._scrollStrategyFactory;\n    /**\n     * Origin for the connected overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.origin;\n    /**\n     * Registered connected position pairs.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positions;\n    /**\n     * This input overrides the positions input if specified. It lets users pass\n     * in arbitrary positioning strategies.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionStrategy;\n    /**\n     * The width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.width;\n    /**\n     * The height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.height;\n    /**\n     * The min width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minWidth;\n    /**\n     * The min height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minHeight;\n    /**\n     * The custom class to be set on the backdrop element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClass;\n    /**\n     * The custom class to add to the overlay pane element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.panelClass;\n    /**\n     * Margin between the overlay and the viewport edges.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.viewportMargin;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.scrollStrategy;\n    /**\n     * Whether the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.open;\n    /**\n     * CSS selector which to set the transform origin.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.transformOriginSelector;\n    /**\n     * Event emitted when the backdrop is clicked.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClick;\n    /**\n     * Event emitted when the position has changed.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionChange;\n    /**\n     * Event emitted when the overlay has been attached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.attach;\n    /**\n     * Event emitted when the overlay has been detached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.detach;\n    /**\n     * Emits when there are keyboard events that are targeted at the overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.overlayKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._dir;\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OverlayModule {\n}\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule],\n        ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin,\n        ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n/**\n * @deprecated Use `OverlayModule` instead.\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/fullscreen-overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    /**\n     * @param {?} _document\n     * @param {?=} platform\n     */\n    constructor(_document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platform) {\n        super(_document, platform);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener((/**\n         * @return {?}\n         */\n        () => this._adjustParentForFullscreenChange()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        /** @type {?} */\n        const fullscreenElement = this.getFullscreenElement();\n        /** @type {?} */\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    /**\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _addFullscreenChangeListener(fn) {\n        /** @type {?} */\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            /** @type {?} */\n            const _document = (/** @type {?} */ (this._document));\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    getFullscreenElement() {\n        /** @type {?} */\n        const _document = (/** @type {?} */ (this._document));\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ FullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenEventName;\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenListener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_a, OVERLAY_CONTAINER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_c, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_d, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_e, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_f, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_g };\n\n//# sourceMappingURL=overlay.js.map","import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that can be used to generically type a class.\n * @record\n * @template T\n */\nfunction ComponentType() { }\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nclass Portal {\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    attach(host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (/** @type {?} */ (host.attach(this)));\n    }\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    detach() {\n        /** @type {?} */\n        let host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /**\n     * Whether this portal is attached to a host.\n     * @return {?}\n     */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Portal.prototype._attachedHost;\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nclass ComponentPortal extends Portal {\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     * @param {?=} componentFactoryResolver\n     */\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\nif (false) {\n    /**\n     * The type of the component that will be instantiated for attachment.\n     * @type {?}\n     */\n    ComponentPortal.prototype.component;\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     * @type {?}\n     */\n    ComponentPortal.prototype.viewContainerRef;\n    /**\n     * [Optional] Injector used for the instantiation of the component.\n     * @type {?}\n     */\n    ComponentPortal.prototype.injector;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * Defaults to using the resolver from the outlet that the portal is attached to.\n     * @type {?}\n     */\n    ComponentPortal.prototype.componentFactoryResolver;\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nclass TemplatePortal extends Portal {\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     * @param {?=} context\n     */\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\nif (false) {\n    /**\n     * The embedded template that will be used to instantiate an embedded View in the host.\n     * @type {?}\n     */\n    TemplatePortal.prototype.templateRef;\n    /**\n     * Reference to the ViewContainer into which the template will be stamped out.\n     * @type {?}\n     */\n    TemplatePortal.prototype.viewContainerRef;\n    /**\n     * Contextual data to be passed in to the embedded view.\n     * @type {?}\n     */\n    TemplatePortal.prototype.context;\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n * @template T\n */\nclass DomPortal extends Portal {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\nif (false) {\n    /**\n     * DOM node hosting the portal's content.\n     * @type {?}\n     */\n    DomPortal.prototype.element;\n}\n/**\n * A `PortalOutlet` is an space that can contain a single `Portal`.\n * @record\n */\nfunction PortalOutlet() { }\nif (false) {\n    /**\n     * Attaches a portal to this outlet.\n     * @param {?} portal\n     * @return {?}\n     */\n    PortalOutlet.prototype.attach = function (portal) { };\n    /**\n     * Detaches the currently attached portal from this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.detach = function () { };\n    /**\n     * Performs cleanup before the outlet is destroyed.\n     * @return {?}\n     */\n    PortalOutlet.prototype.dispose = function () { };\n    /**\n     * Whether there is currently a portal attached to this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.hasAttached = function () { };\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nclass BasePortalOutlet {\n    constructor() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    attach(portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    }\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * The portal currently attached to the host.\n     * @type {?}\n     * @protected\n     */\n    BasePortalOutlet.prototype._attachedPortal;\n    /**\n     * A function that will permanently dispose this host.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._disposeFn;\n    /**\n     * Whether this host has already been permanently disposed.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._isDisposed;\n    /** @type {?} */\n    BasePortalOutlet.prototype.attachDomPortal;\n    /**\n     * @abstract\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachComponentPortal = function (portal) { };\n    /**\n     * @abstract\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachTemplatePortal = function (portal) { };\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * \\@breaking-change 9.0.0\n * @abstract\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/dom-portal-outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} outletElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     * @param {?=} _document\n     */\n    constructor(outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => componentRef.destroy()));\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            }));\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        /** @type {?} */\n        let viewContainer = portal.viewContainerRef;\n        /** @type {?} */\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach((/**\n         * @param {?} rootNode\n         * @return {?}\n         */\n        rootNode => this.outletElement.appendChild(rootNode)));\n        this.setDisposeFn(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        })));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @private\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _getComponentRootNode(componentRef) {\n        return (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView))).rootNodes[0]));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._document;\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.attachDomPortal;\n    /**\n     * Element into which the content is projected.\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.outletElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._defaultInjector;\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * \\@breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     */\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        this._isInitialized = false;\n        /**\n         * Emits when a portal is attached to the outlet.\n         */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                if (anchorNode.parentNode) {\n                    (/** @type {?} */ (anchorNode.parentNode)).replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Portal associated with the Portal outlet.\n     * @return {?}\n     */\n    get portal() {\n        return this._attachedPortal;\n    }\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /**\n     * Component or view reference that is attached to the portal.\n     * @return {?}\n     */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        /** @type {?} */\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(((/** @type {?} */ (ref.hostView))).rootNodes[0]);\n        }\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => ref.destroy()));\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => this._viewContainerRef.clear()));\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /**\n     * Gets the root node of the portal outlet.\n     * @private\n     * @return {?}\n     */\n    _getRootNode() {\n        /** @type {?} */\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (/** @type {?} */ ((nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : (/** @type {?} */ (nativeElement.parentNode)))));\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkPortalOutlet.ngAcceptInputType_portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._document;\n    /**\n     * Whether the portal component is initialized.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._isInitialized;\n    /**\n     * Reference to the currently-attached component/view ref.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._attachedRef;\n    /**\n     * Emits when a portal is attached to the outlet.\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attached;\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._viewContainerRef;\n}\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective], exports: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-injector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nclass PortalInjector {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _customTokens\n     */\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        /** @type {?} */\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._parentInjector;\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._customTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, Inject, ɵɵdefineInjectable, ɵɵinject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, merge, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n/**\n * A strategy that dictates which items should be rendered in the viewport.\n * @record\n */\nfunction VirtualScrollStrategy() { }\nif (false) {\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    VirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.attach = function (viewport) { };\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.detach = function () { };\n    /**\n     * Called when the viewport is scrolled (debounced using requestAnimationFrame).\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentScrolled = function () { };\n    /**\n     * Called when the length of the data changes.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onDataLengthChanged = function () { };\n    /**\n     * Called when the range of items rendered in the DOM has changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentRendered = function () { };\n    /**\n     * Called when the offset of the rendered items changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onRenderedOffsetChanged = function () { };\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.scrollToIndex = function (index, behavior) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/fixed-size-virtual-scroll.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentRendered() { }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        const scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        const firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        const renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        const viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        const dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._scrolledIndexChange;\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @type {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * The attached viewport.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._viewport;\n    /**\n     * The size of the items in the virtually scrolling list.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._itemSize;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._minBufferPx;\n    /**\n     * The number of buffer items to render beyond the edge of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._maxBufferPx;\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The size of the items in the list (in pixels).\n     * @return {?}\n     */\n    get itemSize() { return this._itemSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     * @return {?}\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     * @return {?}\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(( /**\n                         * @return {?}\n                         */() => CdkFixedSizeVirtualScroll))]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(( /**\n                                 * @return {?}\n                                 */() => CdkFixedSizeVirtualScroll))]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_maxBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._maxBufferPx;\n    /**\n     * The scroll strategy used by this directive.\n     * @type {?}\n     */\n    CdkFixedSizeVirtualScroll.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scroll-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next(scrollable))));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    deregister(scrollable) {\n        /** @type {?} */\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        (_, container) => this.deregister(container)));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        /** @type {?} */\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    }\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    getAncestorScrollContainers(elementRef) {\n        /** @type {?} */\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        (_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    _scrollableContainsElement(scrollable, elementRef) {\n        /** @type {?} */\n        let element = elementRef.nativeElement;\n        /** @type {?} */\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    }\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next()));\n        }));\n    }\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\n/** @nocollapse */\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    ScrollDispatcher.prototype._document;\n    /**\n     * Subject for notifying that a registered scrollable reference element has been scrolled.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolled;\n    /**\n     * Keeps track of the global `scroll` and `resize` subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype._globalSubscription;\n    /**\n     * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolledCount;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype.scrollContainers;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrollable.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     * @param {?=} dir\n     */\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    scrollTo(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    _applyScrollToOptions(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        /** @type {?} */\n        const LEFT = 'left';\n        /** @type {?} */\n        const RIGHT = 'right';\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\n/** @nocollapse */\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._elementScrolled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.scrollDispatcher;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.ngZone;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/viewport-ruler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Object that holds the scroll position of the viewport in each direction.\n * @record\n */\nfunction ViewportScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ViewportScrollPosition.prototype.top;\n    /** @type {?} */\n    ViewportScrollPosition.prototype.left;\n}\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nclass ViewportRuler {\n    /**\n     * @param {?} _platform\n     * @param {?} ngZone\n     * @param {?=} document\n     */\n    constructor(_platform, ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._platform = _platform;\n        this._document = document;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const window = this._getWindow();\n            this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe((/**\n             * @return {?}\n             */\n            () => this._updateViewportSize()));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        const document = this._getDocument();\n        /** @type {?} */\n        const window = this._getWindow();\n        /** @type {?} */\n        const documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        const documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    _updateViewportSize() {\n        /** @type {?} */\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\n/** @nocollapse */\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone), ɵɵinject(DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._viewportSize;\n    /**\n     * Stream of viewport change events.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._change;\n    /**\n     * Subscription to streams that invalidate the cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._invalidateCache;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    ViewportRuler.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-viewport.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} ngZone\n     * @param {?} _scrollStrategy\n     * @param {?} dir\n     * @param {?} scrollDispatcher\n     * @param {?=} viewportRuler\n     */\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, \n    /**\n     * @deprecated `viewportRuler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this._scrollStrategy.scrolledIndexChange.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => observer.next(index)))))))));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        this._runAfterChangeDetection = [];\n        /**\n         * Subscription to changes in the viewport size.\n         */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n        if (viewportRuler) {\n            this._viewportChanges = viewportRuler.change().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.checkViewportSize();\n            }));\n        }\n    }\n    /**\n     * The direction the viewport scrolls.\n     * @return {?}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    /**\n     * @param {?} orientation\n     * @return {?}\n     */\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentScrolled()));\n            this._markChangeDetectionNeeded();\n        }))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            }));\n        }));\n    }\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentRendered()));\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        const isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        const axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        /** @type {?} */\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    measureRenderedContentSize() {\n        /** @type {?} */\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    _measureViewportSize() {\n        /** @type {?} */\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._doChangeDetection();\n            }))));\n        }\n    }\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        /** @type {?} */\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler, 8)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the viewport is detached from a CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._detachedSubject;\n    /**\n     * Emits when the rendered range changes.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRangeSubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._orientation;\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.scrolledIndexChange;\n    /**\n     * The element that wraps the rendered content.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._contentWrapper;\n    /**\n     * A stream that emits whenever the rendered range changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.renderedRangeStream;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._totalContentSize;\n    /**\n     * A string representing the `style.width` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentWidth;\n    /**\n     * A string representing the `style.height` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentHeight;\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentTransform;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRange;\n    /**\n     * The length of the data bound to this viewport (in number of items).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._dataLength;\n    /**\n     * The size of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportSize;\n    /**\n     * the currently attached CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._forOf;\n    /**\n     * The last rendered content offset that was set.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffset;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffsetNeedsRewrite;\n    /**\n     * Whether there is a pending change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._isChangeDetectionPending;\n    /**\n     * A list of functions to run after the next change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._runAfterChangeDetection;\n    /**\n     * Subscription to changes in the viewport size.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportChanges;\n    /** @type {?} */\n    CdkVirtualScrollViewport.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-for-of.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    const el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nclass CdkVirtualForOf {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _template\n     * @param {?} _differs\n     * @param {?} _viewport\n     * @param {?} ngZone\n     */\n    constructor(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prev, cur]) => this._changeDataSource(prev, cur))), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        range => {\n            this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            () => this.viewChange.next(this._renderedRange)));\n            this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    /**\n     * The DataSource to display.\n     * @return {?}\n     */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     * @return {?}\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (/**\n             * @param {?} index\n             * @param {?} item\n             * @return {?}\n             */\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)) :\n            undefined;\n    }\n    /**\n     * The template used to stamp out new elements.\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        const rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        let totalSize = 0;\n        /** @type {?} */\n        let i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            let j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    _updateContext() {\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            let view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                const view = this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n            // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n            cdkVirtualForOf: (/** @type {?} */ (this._cdkVirtualForOf)),\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewFromCache(index) {\n        /** @type {?} */\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _detachView(index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\n/** @nocollapse */\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the rendered view of the data changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.viewChange;\n    /**\n     * Subject that emits when a new DataSource instance is given.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._dataSourceChanges;\n    /** @type {?} */\n    CdkVirtualForOf.prototype._cdkVirtualForOf;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._cdkVirtualForTrackBy;\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.cdkVirtualForTemplateCacheSize;\n    /**\n     * Emits whenever the data in the current DataSource changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.dataStream;\n    /**\n     * The differ used to calculate changes to the data.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differ;\n    /**\n     * The most recent data emitted from the DataSource.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._data;\n    /**\n     * The currently rendered items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedItems;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedRange;\n    /**\n     * The template cache used to hold on ot template instancess that have been stamped out, but don't\n     * currently need to be rendered. These instances will be reused in the future rather than\n     * stamping out brand new ones.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._templateCache;\n    /**\n     * Whether the rendered data should be updated during the next ngDoCheck cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._needsUpdate;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._destroyed;\n    /**\n     * The view container to add items to.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewContainerRef;\n    /**\n     * The template to use when stamping out new items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._template;\n    /**\n     * The set of available differs.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differs;\n    /**\n     * The virtual scrolling viewport that these items are being rendered in.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewport;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrolling-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkScrollableModule });\nCdkScrollableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkScrollableModule_Factory(t) { return new (t || CdkScrollableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkScrollableModule, { declarations: [CdkScrollable], exports: [CdkScrollable] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollableModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkScrollable],\n                declarations: [CdkScrollable]\n            }]\n    }], null, null); })();\nclass ScrollingModule {\n}\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[\n            BidiModule,\n            PlatformModule,\n            CdkScrollableModule\n        ],\n        BidiModule,\n        CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [BidiModule,\n        CdkScrollableModule,\n        CdkFixedSizeVirtualScroll,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    BidiModule,\n                    PlatformModule,\n                    CdkScrollableModule\n                ],\n                exports: [\n                    BidiModule,\n                    CdkScrollableModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autofill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._monitoredElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._ngZone;\n}\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the autofill state of the element changes.\n     * @type {?}\n     */\n    CdkAutofill.prototype.cdkAutofill;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?=} document\n     */\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add(this._measuringClass);\n        textarea.placeholder = '';\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove(this._measuringClass);\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        /** @type {?} */\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_minRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_maxRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_enabled;\n    /**\n     * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._initialHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._minRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._maxRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._enabled;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousMinRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._textareaElement;\n    /**\n     * Cached height of a textarea with a single row.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._cachedLineHeight;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    CdkTextareaAutosize.prototype._document;\n    /**\n     * Class that should be applied to the textarea while it's being measured.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._measuringClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/text-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n * @type {?}\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/**\n * \\@docs-private\n */\nclass MatButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatButtonBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the button is round.\n         */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                ((/** @type {?} */ (this._getHostElement()))).classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        this._focusMonitor.monitor(this._elementRef, true);\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    _hasHostAttributes(...attributes) {\n        return attributes.some((/**\n         * @param {?} attribute\n         * @return {?}\n         */\n        attribute => this._getHostElement().hasAttribute(attribute)));\n    }\n}\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 3, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the button is round.\n     * @type {?}\n     */\n    MatButton.prototype.isRoundButton;\n    /**\n     * Whether the button is icon button.\n     * @type {?}\n     */\n    MatButton.prototype.isIconButton;\n    /**\n     * Reference to the MatRipple instance of the button.\n     * @type {?}\n     */\n    MatButton.prototype.ripple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButton.prototype._focusMonitor;\n    /** @type {?} */\n    MatButton.prototype._animationMode;\n}\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    /**\n     * @param {?} focusMonitor\n     * @param {?} elementRef\n     * @param {?} animationMode\n     */\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tabindex of the button.\n     * @type {?}\n     */\n    MatAnchor.prototype.tabIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); }, imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton,\n        MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton,\n        MatAnchor,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Position of the actions inside the card.\n     * @type {?}\n     */\n    MatCardActions.prototype.align;\n}\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatCard.prototype._animationMode;\n}\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_inset;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._inset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r84 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r84._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r88 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r88); const ctx_r87 = ɵngcc0.ɵɵnextContext(); return ctx_r87.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r78 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r78._control.empty && !ctx_r78._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r78._control.empty && !ctx_r78._shouldAlwaysFloat)(\"mat-accent\", ctx_r78.color == \"accent\")(\"mat-warn\", ctx_r78.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r78.appearance != \"outline\")(\"id\", ctx_r78._labelId)(\"ngSwitch\", ctx_r78._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r78._control.id)(\"aria-owns\", ctx_r78._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r78.hideRequiredMarker && ctx_r78._control.required && !ctx_r78._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r80 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r80.color == \"accent\")(\"mat-warn\", ctx_r80.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r81 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r81._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r90 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r90._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r90.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r82 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r82._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r82.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n * @type {?}\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule,\n        MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { SecurityContext, Injectable, Optional, Inject, ErrorHandler, ɵɵdefineInjectable, ɵɵinject, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including \\@angular/common/http.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * \\@docs-private\n * @param {?} literal HTML that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Options that can be used to configure how an icon or the icons in an icon set are presented.\n * @record\n */\nfunction IconOptions() { }\nif (false) {\n    /**\n     * View box to set on the icon.\n     * @type {?|undefined}\n     */\n    IconOptions.prototype.viewBox;\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nclass SvgIconConfig {\n    /**\n     * @param {?} data\n     * @param {?=} options\n     */\n    constructor(data, options) {\n        this.options = options;\n        // Note that we can't use `instanceof SVGElement` here,\n        // because it'll break during server-side rendering.\n        if (!!((/** @type {?} */ (data))).nodeName) {\n            this.svgElement = (/** @type {?} */ (data));\n        }\n        else {\n            this.url = (/** @type {?} */ (data));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    SvgIconConfig.prototype.url;\n    /** @type {?} */\n    SvgIconConfig.prototype.svgElement;\n    /** @type {?} */\n    SvgIconConfig.prototype.options;\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    /**\n     * @param {?} _httpClient\n     * @param {?} _sanitizer\n     * @param {?} document\n     * @param {?=} _errorHandler\n     */\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /**\n         * Cache for icons loaded by direct URLs.\n         */\n        this._cachedIconsByUrl = new Map();\n        /**\n         * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n         */\n        this._inProgressUrlFetches = new Map();\n        /**\n         * Map from font identifiers to their CSS class names. Used for icon fonts.\n         */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIcon(iconName, url, options) {\n        return (/** @type {?} */ (this)).addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._createSvgElementForSingleIcon(sanitizedLiteral, options);\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSet(url, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._svgElementFromString(sanitizedLiteral);\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {THIS}\n     */\n    registerFontClassAlias(alias, className = alias) {\n        (/** @type {?} */ (this))._fontCssClassesByAlias.set(alias, className);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} className\n     * @return {THIS}\n     */\n    setDefaultFontSetClass(className) {\n        (/** @type {?} */ (this))._defaultFontSetClass = className;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    getSvgIconFromUrl(safeUrl) {\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        /** @type {?} */\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(tap((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => this._cachedIconsByUrl.set((/** @type {?} */ (url)), svg))), map((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => cloneSvg(svg))));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        // Return (copy of) cached icon if possible.\n        /** @type {?} */\n        const key = iconKey(namespace, name);\n        /** @type {?} */\n        const config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        /** @type {?} */\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(tap((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => config.svgElement = svg)), map((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => cloneSvg(svg))));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @private\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        /** @type {?} */\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        /** @type {?} */\n        const iconSetFetchRequests = iconSetConfigs\n            .filter((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => !iconSetConfig.svgElement))\n            .map((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((/**\n             * @param {?} err\n             * @return {?}\n             */\n            (err) => {\n                /** @type {?} */\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                /** @type {?} */\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                // @breaking-change 9.0.0 _errorHandler parameter to be made required\n                if (this._errorHandler) {\n                    this._errorHandler.handleError(new Error(errorMessage));\n                }\n                else {\n                    console.error(errorMessage);\n                }\n                return of(null);\n            })));\n        }));\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        })));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            const config = iconSetConfigs[i];\n            if (config.svgElement) {\n                /** @type {?} */\n                const foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchUrl(config.url)\n            .pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => this._createSvgElementForSingleIcon(svgText, config.options))));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconSetFromConfig(config) {\n        // If the SVG for this icon set has already been parsed, do nothing.\n        if (config.svgElement) {\n            return of(config.svgElement);\n        }\n        return this._fetchUrl(config.url).pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => {\n            // It is possible that the icon set was parsed and cached by an earlier request, so parsing\n            // only needs to occur if the cache is yet unset.\n            if (!config.svgElement) {\n                config.svgElement = this._svgElementFromString(svgText);\n            }\n            return config.svgElement;\n        })));\n    }\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @private\n     * @param {?} responseText\n     * @param {?=} options\n     * @return {?}\n     */\n    _createSvgElementForSingleIcon(responseText, options) {\n        /** @type {?} */\n        const svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg, options);\n        return svg;\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @param {?=} options\n     * @return {?}\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        /** @type {?} */\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        /** @type {?} */\n        const iconElement = (/** @type {?} */ (iconSource.cloneNode(true)));\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes((/** @type {?} */ (iconElement)), options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    _svgElementFromString(str) {\n        /** @type {?} */\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        /** @type {?} */\n        const svg = (/** @type {?} */ (div.querySelector('svg')));\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _toSvgElement(element) {\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        /** @type {?} */\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @private\n     * @param {?} svg\n     * @param {?=} options\n     * @return {?}\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @private\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    _fetchUrl(safeUrl) {\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        /** @type {?} */\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        // TODO(jelbourn): for some reason, the `finalize` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        /** @type {?} */\n        const req = this._httpClient.get(url, { responseType: 'text' }).pipe(finalize((/**\n         * @return {?}\n         */\n        () => this._inProgressUrlFetches.delete(url))), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        (/** @type {?} */ (this))._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        /** @type {?} */\n        const configNamespace = (/** @type {?} */ (this))._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            (/** @type {?} */ (this))._iconSetConfigs.set(namespace, [config]);\n        }\n        return (/** @type {?} */ (this));\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler, 8)); };\n/** @nocollapse */\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\n/** @nocollapse */ MatIconRegistry.ɵprov = ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(ɵɵinject(HttpClient, 8), ɵɵinject(DomSanitizer), ɵɵinject(DOCUMENT, 8), ɵɵinject(ErrorHandler, 8)); }, token: MatIconRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._document;\n    /**\n     * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._svgIconConfigs;\n    /**\n     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n     * Multiple icon sets can be registered under the same namespace.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._iconSetConfigs;\n    /**\n     * Cache for icons loaded by direct URLs.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._cachedIconsByUrl;\n    /**\n     * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._inProgressUrlFetches;\n    /**\n     * Map from font identifiers to their CSS class names. Used for icon fonts.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._fontCssClassesByAlias;\n    /**\n     * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n     * The default 'material-icons' value assumes that the material icon font has been loaded as\n     * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._defaultFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._httpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._sanitizer;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._errorHandler;\n}\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} httpClient\n * @param {?} sanitizer\n * @param {?=} document\n * @param {?=} errorHandler\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, document, errorHandler) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        [new Optional(), ErrorHandler],\n        [new Optional(), (/** @type {?} */ (DOCUMENT))],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return (/** @type {?} */ (svg.cloneNode(true)));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatIcon.\n/**\n * \\@docs-private\n */\nclass MatIconBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatIconBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/**\n * Stubbed out location for `MatIcon`.\n * \\@docs-private\n * @record\n */\nfunction MatIconLocation() { }\nif (false) {\n    /** @type {?} */\n    MatIconLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * SVG attributes that accept a FuncIRI (e.g. `url(<something>)`).\n * @type {?}\n */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = /**\n * @param {?} attr\n * @return {?}\n */\nattr => `[${attr}]`;\n/**\n * Selector that can be used to find all elements that are using a `FuncIRI`.\n * @type {?}\n */\nconst funcIriAttributeSelector = funcIriAttributes.map((ɵ0)).join(', ');\n/**\n * Regex that can be used to extract the id out of a FuncIRI.\n * @type {?}\n */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _iconRegistry\n     * @param {?} ariaHidden\n     * @param {?=} _location\n     * @param {?=} _errorHandler\n     */\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /**\n         * Subscription to the current in-progress SVG icon request.\n         */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     * @return {?}\n     */\n    get inline() {\n        return this._inline;\n    }\n    /**\n     * @param {?} inline\n     * @return {?}\n     */\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /**\n     * Font set that the icon is a part of.\n     * @return {?}\n     */\n    get fontSet() { return this._fontSet; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontSet(value) {\n        this._fontSet = this._cleanupFontValue(value);\n    }\n    /**\n     * Name of an icon within a font set.\n     * @return {?}\n     */\n    get fontIcon() { return this._fontIcon; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontIcon(value) {\n        this._fontIcon = this._cleanupFontValue(value);\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @private\n     * @param {?} iconName\n     * @return {?}\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        /** @type {?} */\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return (/** @type {?} */ (parts));\n            default: throw Error(`Invalid icon name: \"${iconName}\"`);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        /** @type {?} */\n        const svgIconChanges = changes['svgIcon'];\n        if (svgIconChanges) {\n            this._currentIconFetch.unsubscribe();\n            if (this.svgIcon) {\n                const [namespace, iconName] = this._splitIconName(this.svgIcon);\n                this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                    .pipe(take(1))\n                    .subscribe((/**\n                 * @param {?} svg\n                 * @return {?}\n                 */\n                svg => this._setSvgElement(svg)), (/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    /** @type {?} */\n                    const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                    // @breaking-change 9.0.0 _errorHandler parameter to be made required.\n                    if (this._errorHandler) {\n                        this._errorHandler.handleError(new Error(errorMessage));\n                    }\n                    else {\n                        console.error(errorMessage);\n                    }\n                }));\n            }\n            else if (svgIconChanges.previousValue) {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        /** @type {?} */\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && this._location && cachedElements.size) {\n            /** @type {?} */\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    /**\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        /** @type {?} */\n        const styleTags = (/** @type {?} */ (svg.querySelectorAll('style')));\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        if (this._location) {\n            /** @type {?} */\n            const path = this._location.getPathname();\n            this._previousPath = path;\n            this._cacheChildrenWithExternalReferences(svg);\n            this._prependPathToReferences(path);\n        }\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _clearSvgElement() {\n        /** @type {?} */\n        const layoutElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            /** @type {?} */\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        /** @type {?} */\n        const elem = this._elementRef.nativeElement;\n        /** @type {?} */\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     * @private\n     * @param {?} path\n     * @return {?}\n     */\n    _prependPathToReferences(path) {\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((/**\n             * @param {?} attrs\n             * @param {?} element\n             * @return {?}\n             */\n            (attrs, element) => {\n                attrs.forEach((/**\n                 * @param {?} attr\n                 * @return {?}\n                 */\n                attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                }));\n            }));\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        /** @type {?} */\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach((/**\n             * @param {?} attr\n             * @return {?}\n             */\n            attr => {\n                /** @type {?} */\n                const elementWithReference = elementsWithFuncIri[i];\n                /** @type {?} */\n                const value = elementWithReference.getAttribute(attr);\n                /** @type {?} */\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    /** @type {?} */\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    (/** @type {?} */ (attributes)).push({ name: attr, value: match[1] });\n                }\n            }));\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler, 8)); };\nMatIcon.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 4, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", fontSet: \"fontSet\", fontIcon: \"fontIcon\", svgIcon: \"svgIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, { inline: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatIcon.ngAcceptInputType_inline;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._inline;\n    /**\n     * Name of the icon in the SVG icon set.\n     * @type {?}\n     */\n    MatIcon.prototype.svgIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontSet;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontIconClass;\n    /**\n     * Keeps track of the current page path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousPath;\n    /**\n     * Keeps track of the elements and attributes that we've prefixed with the current path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._elementsWithExternalReferences;\n    /**\n     * Subscription to the current in-progress SVG icon request.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._currentIconFetch;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._iconRegistry;\n    /**\n     * @deprecated `location` parameter to be made required.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._location;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._errorHandler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatIconModule {\n}\nMatIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatIconModule_Factory(t) { return new (t || MatIconModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n\n//# sourceMappingURL=icon.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-value-accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatInputBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatInputBase.prototype._parentForm;\n    /** @type {?} */\n    MatInputBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInputBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_readonly;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_required;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._uid;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._previousNativeValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._inputValueAccessor;\n    /**\n     * The aria-describedby attribute on the input for improved a11y.\n     * @type {?}\n     */\n    MatInput.prototype._ariaDescribedby;\n    /**\n     * Whether the component is being rendered on the server.\n     * @type {?}\n     */\n    MatInput.prototype._isServer;\n    /**\n     * Whether the component is a native html select.\n     * @type {?}\n     */\n    MatInput.prototype._isNativeSelect;\n    /**\n     * Whether the component is a textarea.\n     * @type {?}\n     */\n    MatInput.prototype._isTextarea;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.focused;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.stateChanges;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.controlType;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.autofilled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._type;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatInput.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._readonly;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._neverEmptyInputTypes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._platform;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ],\n        TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput,\n        MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput,\n        MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { CommonModule } from '@angular/common';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, ContentChildren, ContentChild, Input, forwardRef, Inject, ViewChild, EventEmitter, isDevMode, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, END, HOME, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r26 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r26.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r26.disabled);\n} }\nconst _c4 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c5 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); };\nMatNavList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatNavList.prototype._stateChanges;\n}\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatList.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatList.prototype._elementRef;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8)); };\nMatListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._isInteractiveList;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._list;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._destroyed;\n    /** @type {?} */\n    MatListItem.prototype._lines;\n    /** @type {?} */\n    MatListItem.prototype._avatar;\n    /** @type {?} */\n    MatListItem.prototype._icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/selection-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the selection list that emitted the event.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.source;\n    /**\n     * Reference to the option that has been changed.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.option;\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n        this._inputsInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSelectionList)))); };\nMatListOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSelectionList))]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._hasFocus;\n    /** @type {?} */\n    MatListOption.prototype._avatar;\n    /** @type {?} */\n    MatListOption.prototype._icon;\n    /** @type {?} */\n    MatListOption.prototype._lines;\n    /**\n     * DOM element containing the item's text.\n     * @type {?}\n     */\n    MatListOption.prototype._text;\n    /**\n     * Whether the label should appear before or after the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatListOption.prototype.checkboxPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._color;\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._inputsInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._changeDetector;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatListOption.prototype.selectionList;\n}\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     * @param {?} _changeDetector\n     */\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /**\n         * The tabindex of the selection list.\n         */\n        this._tabIndex = -1;\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * Whether selection is limited to one or multiple items (default multiple).\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (isDevMode() && this._contentInitialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateTabIndex();\n        }));\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    /** @type {?} */\n                    const shouldSelect = this.options.some((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.disabled && !option.selected));\n                    this._setAllOptionsSelected(shouldSelect, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * When the selection list is focused, we want to move focus to an option within the list. Do this\n     * by setting the appropriate option to be active.\n     * @return {?}\n     */\n    _onFocus() {\n        /** @type {?} */\n        const activeIndex = this._keyManager.activeItemIndex;\n        if (!activeIndex || (activeIndex === -1)) {\n            // If there is no active index, set focus to the first option.\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            // Otherwise, set focus to the active option.\n            this._keyManager.setActiveItem(activeIndex);\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @param {?=} skipDisabled\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     * @private\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        }));\n    }\n    /**\n     * Updates the tabindex based upon if the selection list is empty.\n     * @private\n     * @return {?}\n     */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatSelectionList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSelectionList_focus_HostBindingHandler() { return ctx._onFocus(); })(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(focus)': '_onFocus()',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._contentInitialized;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._keyManager;\n    /**\n     * The option components contained within this selection-list.\n     * @type {?}\n     */\n    MatSelectionList.prototype.options;\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectionChange;\n    /**\n     * Tabindex of the selection list.\n     * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n     * @type {?}\n     */\n    MatSelectionList.prototype.tabIndex;\n    /**\n     * Theme color of the selection list. This sets the checkbox color for all list options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.color;\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     * @type {?}\n     */\n    MatSelectionList.prototype.compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._disabled;\n    /**\n     * The currently selected options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectedOptions;\n    /**\n     * The tabindex of the selection list.\n     * @type {?}\n     */\n    MatSelectionList.prototype._tabIndex;\n    /**\n     * View to model callback that should be called whenever the selected options change.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._onChange;\n    /**\n     * Keeps track of the currently-selected value.\n     * @type {?}\n     */\n    MatSelectionList.prototype._value;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._destroyed;\n    /**\n     * View to model callback that should be called if the list or its options lost focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._onTouched;\n    /**\n     * Whether the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._isDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._changeDetector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n        MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, takeUntil, distinctUntilChanged, map, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r1._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r5._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatDrawerContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatDrawerContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatDrawerContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContent.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatDrawerContent.prototype._container;\n}\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     * @param {?=} _container\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        (opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                this._takeFocus();\n            }\n            else {\n                this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (fromEvent(this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }))));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        }));\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @return {?}\n     */\n    get autoFocus() {\n        /** @type {?} */\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState.indexOf('open') === 0)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState === 'void')), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     * @private\n     * @return {?}\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n            if (this._elementFocusedBeforeDrawerWasOpened) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        this._updateFocusTrapState();\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            open => resolve(open ? 'open' : 'close')));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /**\n     * Updates the enabled state of the focus trap.\n     * @private\n     * @return {?}\n     */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_disableClose;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_autoFocus;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_opened;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._enableAnimations;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._mode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._disableClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._autoFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._opened;\n    /**\n     * How the sidenav was opened (keypress, mouse click etc.)\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._openedVia;\n    /**\n     * Emits whenever the drawer has started animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationStarted;\n    /**\n     * Emits whenever the drawer is done animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationEnd;\n    /**\n     * Current state of the sidenav animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationState;\n    /**\n     * Event emitted when the drawer open state is changed.\n     * @type {?}\n     */\n    MatDrawer.prototype.openedChange;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._destroyed;\n    /**\n     * Event emitted when the drawer's position changes.\n     * @type {?}\n     */\n    MatDrawer.prototype.onPositionChanged;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     * @type {?}\n     */\n    MatDrawer.prototype._modeChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._doc;\n    /**\n     * @deprecated `_container` parameter to be made required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDrawer.prototype._container;\n}\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Drawers that belong to this container.\n         */\n        this._drawers = new QueryList();\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        (drawer) => {\n            // @breaking-change 10.0.0 Remove `_container` check once container parameter is required.\n            this._drawers.reset(drawer.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => !item._container || item._container === this)));\n            this._drawers.notifyOnChanges();\n        }));\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validateDrawers();\n            this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            (drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            }));\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.open()));\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.close()));\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                const width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                const width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._contentMarginChanges.next(this._contentMargins)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => this._doCheckSubject.next()));\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.fromState !== event.toState)), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setContainerClass(drawer.opened)));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n            }));\n        }));\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        /** @type {?} */\n        const classList = this._element.nativeElement.classList;\n        /** @type {?} */\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => (/** @type {?} */ (drawer)).close()));\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_autosize;\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_hasBackdrop;\n    /**\n     * All drawers in the container. Includes drawers from inside nested containers.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._allDrawers;\n    /**\n     * Drawers that belong to this container.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._drawers;\n    /** @type {?} */\n    MatDrawerContainer.prototype._content;\n    /** @type {?} */\n    MatDrawerContainer.prototype._userContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._autosize;\n    /** @type {?} */\n    MatDrawerContainer.prototype._backdropOverride;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype.backdropClick;\n    /**\n     * The drawer at the start/end position, independent of direction.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._left;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._right;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._destroyed;\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._doCheckSubject;\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._contentMargins;\n    /** @type {?} */\n    MatDrawerContainer.prototype._contentMarginChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSidenavContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSidenavContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSidenavContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedInViewport;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedTopGap;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedBottomGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedInViewport;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedTopGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedBottomGap;\n}\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenavContainer.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    MatSidenavContainer.prototype._allDrawers;\n    /** @type {?} */\n    MatSidenavContainer.prototype._content;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PlatformModule,\n            CdkScrollableModule,\n        ],\n        CdkScrollableModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PlatformModule,\n                    CdkScrollableModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","import { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, PortalInjector, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgZone, ElementRef, ChangeDetectorRef, ViewChild, NgModule, TemplateRef, Injectable, Injector, Optional, SkipSelf, ɵɵdefineInjectable, ɵɵinject, INJECTOR } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Event that is emitted when a snack bar is dismissed.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/cdk/portal';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/layout';\n\nfunction SimpleSnackBar_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r146 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function SimpleSnackBar_div_2_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r146); const ctx_r145 = ɵngcc0.ɵɵnextContext(); return ctx_r145.action(); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r144 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r144.data.action);\n} }\nfunction MatSnackBarContainer_ng_template_0_Template(rf, ctx) { }\nfunction MatSnackBarDismiss() { }\nif (false) {\n    /**\n     * Whether the snack bar was dismissed using the action button.\n     * @type {?}\n     */\n    MatSnackBarDismiss.prototype.dismissedByAction;\n}\n/**\n * Maximum amount of milliseconds that can be passed into setTimeout.\n * @type {?}\n */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n * @template T\n */\nclass MatSnackBarRef {\n    /**\n     * @param {?} containerInstance\n     * @param {?} _overlayRef\n     */\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /**\n         * Subject for notifying the user that the snack bar has been dismissed.\n         */\n        this._afterDismissed = new Subject();\n        /**\n         * Subject for notifying the user that the snack bar has opened and appeared.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the snack bar action was called.\n         */\n        this._onAction = new Subject();\n        /**\n         * Whether the snack bar was dismissed using the action button.\n         */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe((/**\n         * @return {?}\n         */\n        () => this.dismiss()));\n        containerInstance._onExit.subscribe((/**\n         * @return {?}\n         */\n        () => this._finishDismiss()));\n    }\n    /**\n     * Dismisses the snack bar.\n     * @return {?}\n     */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @return {?}\n     */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n        }\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /**\n     * Dismisses the snack bar after some duration\n     * @param {?} duration\n     * @return {?}\n     */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => this.dismiss()), Math.min(duration, MAX_TIMEOUT));\n    }\n    /**\n     * Marks the snackbar as opened\n     * @return {?}\n     */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /**\n     * Cleans up the DOM after closing.\n     * @private\n     * @return {?}\n     */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /**\n     * Gets an observable that is notified when the snack bar is finished closing.\n     * @return {?}\n     */\n    afterDismissed() {\n        return this._afterDismissed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the snack bar has opened and appeared.\n     * @return {?}\n     */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /**\n     * Gets an observable that is notified when the snack bar action is called.\n     * @return {?}\n     */\n    onAction() {\n        return this._onAction.asObservable();\n    }\n}\nif (false) {\n    /**\n     * The instance of the component making up the content of the snack bar.\n     * @type {?}\n     */\n    MatSnackBarRef.prototype.instance;\n    /**\n     * The instance of the component making up the content of the snack bar.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSnackBarRef.prototype.containerInstance;\n    /**\n     * Subject for notifying the user that the snack bar has been dismissed.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._afterDismissed;\n    /**\n     * Subject for notifying the user that the snack bar has opened and appeared.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._afterOpened;\n    /**\n     * Subject for notifying the user that the snack bar action was called.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._onAction;\n    /**\n     * Timeout ID for the duration setTimeout call. Used to clear the timeout if the snackbar is\n     * dismissed before the duration passes.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._durationTimeoutId;\n    /**\n     * Whether the snack bar was dismissed using the action button.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._dismissedByAction;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._overlayRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a snack bar.\n * @type {?}\n */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n * @template D\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /**\n         * The politeness level for the MatAriaLiveAnnouncer announcement.\n         */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /**\n         * The length of time in milliseconds to wait before automatically dismissing the snack bar.\n         */\n        this.duration = 0;\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * The horizontal position to place the snack bar.\n         */\n        this.horizontalPosition = 'center';\n        /**\n         * The vertical position to place the snack bar.\n         */\n        this.verticalPosition = 'bottom';\n    }\n}\nif (false) {\n    /**\n     * The politeness level for the MatAriaLiveAnnouncer announcement.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.politeness;\n    /**\n     * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n     * component or template, the announcement message will default to the specified message.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.announcementMessage;\n    /**\n     * The view container that serves as the parent for the snackbar for the purposes of dependency\n     * injection. Note: this does not affect where the snackbar is inserted in the DOM.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.viewContainerRef;\n    /**\n     * The length of time in milliseconds to wait before automatically dismissing the snack bar.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.duration;\n    /**\n     * Extra CSS classes to be added to the snack bar container.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.panelClass;\n    /**\n     * Text layout direction for the snack bar.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.direction;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.data;\n    /**\n     * The horizontal position to place the snack bar.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.horizontalPosition;\n    /**\n     * The vertical position to place the snack bar.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.verticalPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/simple-snack-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nclass SimpleSnackBar {\n    /**\n     * @param {?} snackBarRef\n     * @param {?} data\n     */\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /**\n     * Performs the action on the snack bar.\n     * @return {?}\n     */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /**\n     * If the action button should be shown.\n     * @return {?}\n     */\n    get hasAction() {\n        return !!this.data.action;\n    }\n}\nSimpleSnackBar.ɵfac = function SimpleSnackBar_Factory(t) { return new (t || SimpleSnackBar)(ɵngcc0.ɵɵdirectiveInject(MatSnackBarRef), ɵngcc0.ɵɵdirectiveInject(MAT_SNACK_BAR_DATA)); };\nSimpleSnackBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SimpleSnackBar, selectors: [[\"simple-snack-bar\"]], hostAttrs: [1, \"mat-simple-snackbar\"], decls: 3, vars: 2, consts: [[\"class\", \"mat-simple-snackbar-action\", 4, \"ngIf\"], [1, \"mat-simple-snackbar-action\"], [\"mat-button\", \"\", 3, \"click\"]], template: function SimpleSnackBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\");\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, SimpleSnackBar_div_2_Template, 3, 1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.data.message);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasAction);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton], styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nSimpleSnackBar.ctorParameters = () => [\n    { type: MatSnackBarRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DATA,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SimpleSnackBar, [{\n        type: Component,\n        args: [{\n                selector: 'simple-snack-bar',\n                template: \"<span>{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-simple-snackbar'\n                },\n                styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DATA]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Data that was injected into the snack bar.\n     * @type {?}\n     */\n    SimpleSnackBar.prototype.data;\n    /** @type {?} */\n    SimpleSnackBar.prototype.snackBarRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material snack bar.\n * \\@docs-private\n * @type {?}\n */\nconst matSnackBarAnimations = {\n    /**\n     * Animation that shows and hides a snack bar.\n     */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0\n        }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Internal component that wraps user-provided snack bar content.\n * \\@docs-private\n */\nclass MatSnackBarContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} snackBarConfig\n     */\n    constructor(_ngZone, _elementRef, _changeDetectorRef, snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.snackBarConfig = snackBarConfig;\n        /**\n         * Whether the component has been destroyed.\n         */\n        this._destroyed = false;\n        /**\n         * Subject for notifying that the snack bar has exited from view.\n         */\n        this._onExit = new Subject();\n        /**\n         * Subject for notifying that the snack bar has finished entering the view.\n         */\n        this._onEnter = new Subject();\n        /**\n         * The state of the snack bar animations.\n         */\n        this._animationState = 'void';\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            this._assertNotAttached();\n            this._applySnackBarClasses();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        // Based on the ARIA spec, `alert` and `status` roles have an\n        // implicit `assertive` and `polite` politeness respectively.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._role = 'alert';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._role = null;\n        }\n        else {\n            this._role = 'status';\n        }\n    }\n    /**\n     * Attach a component portal as content to this snack bar container.\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a template portal as content to this snack bar container.\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Handle end of animations, updating the state of the snackbar.\n     * @param {?} event\n     * @return {?}\n     */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            /** @type {?} */\n            const onEnter = this._onEnter;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                onEnter.next();\n                onEnter.complete();\n            }));\n        }\n    }\n    /**\n     * Begin animation of snack bar entrance into view.\n     * @return {?}\n     */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Begin animation of the snack bar exiting from view.\n     * @return {?}\n     */\n    exit() {\n        // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n        // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n        // `MatSnackBar.open`).\n        this._animationState = 'hidden';\n        // Mark this element with an 'exit' attribute to indicate that the snackbar has\n        // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n        // test harness.\n        this._elementRef.nativeElement.setAttribute('mat-exit', '');\n        return this._onExit;\n    }\n    /**\n     * Makes sure the exit callbacks have been invoked when the element is destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._completeExit();\n    }\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     * @private\n     * @return {?}\n     */\n    _completeExit() {\n        this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._onExit.next();\n            this._onExit.complete();\n        }));\n    }\n    /**\n     * Applies the various positioning and user-configured CSS classes to the snack bar.\n     * @private\n     * @return {?}\n     */\n    _applySnackBarClasses() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach((/**\n                 * @param {?} cssClass\n                 * @return {?}\n                 */\n                cssClass => element.classList.add(cssClass)));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            element.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            element.classList.add('mat-snack-bar-top');\n        }\n    }\n    /**\n     * Asserts that no content is already attached to the container.\n     * @private\n     * @return {?}\n     */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n}\nMatSnackBarContainer.ɵfac = function MatSnackBarContainer_Factory(t) { return new (t || MatSnackBarContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSnackBarConfig)); };\nMatSnackBarContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSnackBarContainer, selectors: [[\"snack-bar-container\"]], viewQuery: function MatSnackBarContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [1, \"mat-snack-bar-container\"], hostVars: 2, hostBindings: function MatSnackBarContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@state.done\", function MatSnackBarContainer_animation_state_done_HostBindingHandler($event) { return ctx.onAnimationEnd($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx._role);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@state\", ctx._animationState);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatSnackBarContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatSnackBarContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc3.CdkPortalOutlet], styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"], encapsulation: 2, data: { animation: [matSnackBarAnimations.snackBarState] } });\n/** @nocollapse */\nMatSnackBarContainer.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSnackBarConfig }\n];\nMatSnackBarContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBarContainer, [{\n        type: Component,\n        args: [{\n                selector: 'snack-bar-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                // In Ivy embedded views will be change detected from their declaration place, rather than\n                // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n                // because it might cause snack bars that were opened from a template not to be out of date.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matSnackBarAnimations.snackBarState],\n                host: {\n                    '[attr.role]': '_role',\n                    'class': 'mat-snack-bar-container',\n                    '[@state]': '_animationState',\n                    '(@state.done)': 'onAnimationEnd($event)'\n                },\n                styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSnackBarConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * Whether the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarContainer.prototype._destroyed;\n    /**\n     * The portal outlet inside of this container into which the snack bar content will be loaded.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._portalOutlet;\n    /**\n     * Subject for notifying that the snack bar has exited from view.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._onExit;\n    /**\n     * Subject for notifying that the snack bar has finished entering the view.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._onEnter;\n    /**\n     * The state of the snack bar animations.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._animationState;\n    /**\n     * ARIA role for the snack bar container.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._role;\n    /**\n     * Attaches a DOM portal to the snack bar container.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBarContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBarContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBarContainer.prototype._changeDetectorRef;\n    /**\n     * The snack bar configuration.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype.snackBarConfig;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSnackBarModule {\n}\nMatSnackBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSnackBarModule });\nMatSnackBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSnackBarModule_Factory(t) { return new (t || MatSnackBarModule)(); }, imports: [[\n            OverlayModule,\n            PortalModule,\n            CommonModule,\n            MatButtonModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSnackBarModule, { declarations: function () { return [MatSnackBarContainer,\n        SimpleSnackBar]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        CommonModule,\n        MatButtonModule,\n        MatCommonModule]; }, exports: function () { return [MatSnackBarContainer,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    CommonModule,\n                    MatButtonModule,\n                    MatCommonModule,\n                ],\n                exports: [MatSnackBarContainer, MatCommonModule],\n                declarations: [MatSnackBarContainer, SimpleSnackBar],\n                entryComponents: [MatSnackBarContainer, SimpleSnackBar]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify default snack bar.\n * @type {?}\n */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar {\n    /**\n     * @param {?} _overlay\n     * @param {?} _live\n     * @param {?} _injector\n     * @param {?} _breakpointObserver\n     * @param {?} _parentSnackBar\n     * @param {?} _defaultConfig\n     */\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n    }\n    /**\n     * Reference to the currently opened snackbar at *any* level.\n     * @return {?}\n     */\n    get _openedSnackBarRef() {\n        /** @type {?} */\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @template T\n     * @param {?} component Component to be instantiated.\n     * @param {?=} config Extra configuration for the snack bar.\n     * @return {?}\n     */\n    openFromComponent(component, config) {\n        return (/** @type {?} */ (this._attach(component, config)));\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param {?} template Template to be instantiated.\n     * @param {?=} config Extra configuration for the snack bar.\n     * @return {?}\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param {?} message The message to show in the snackbar.\n     * @param {?=} action The label for the snackbar action.\n     * @param {?=} config Additional configuration options for the snackbar.\n     * @return {?}\n     */\n    open(message, action = '', config) {\n        /** @type {?} */\n        const _config = Object.assign(Object.assign({}, this._defaultConfig), config);\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        if (!_config.announcementMessage) {\n            _config.announcementMessage = message;\n        }\n        return this.openFromComponent(SimpleSnackBar, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     * @return {?}\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     * @private\n     * @param {?} overlayRef\n     * @param {?} config\n     * @return {?}\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatSnackBarConfig, config]\n        ]));\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatSnackBarContainer, config.viewContainerRef, injector);\n        /** @type {?} */\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     * @private\n     * @template T\n     * @param {?} content\n     * @param {?=} userConfig\n     * @return {?}\n     */\n    _attach(content, userConfig) {\n        /** @type {?} */\n        const config = Object.assign(Object.assign(Object.assign({}, new MatSnackBarConfig()), this._defaultConfig), userConfig);\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        /** @type {?} */\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            /** @type {?} */\n            const portal = new TemplatePortal(content, (/** @type {?} */ (null)), (/** @type {?} */ ({\n                $implicit: config.data,\n                snackBarRef\n            })));\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, snackBarRef);\n            /** @type {?} */\n            const portal = new ComponentPortal(content, undefined, injector);\n            /** @type {?} */\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(takeUntil(overlayRef.detachments())).subscribe((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => {\n            /** @type {?} */\n            const classList = overlayRef.overlayElement.classList;\n            /** @type {?} */\n            const className = 'mat-snack-bar-handset';\n            state.matches ? classList.add(className) : classList.remove(className);\n        }));\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /**\n     * Animates the old snack bar out and the new one in.\n     * @private\n     * @param {?} snackBarRef\n     * @param {?} config\n     * @return {?}\n     */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        }));\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                snackBarRef.containerInstance.enter();\n            }));\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe((/**\n             * @return {?}\n             */\n            () => snackBarRef._dismissAfter((/** @type {?} */ (config.duration)))));\n        }\n        if (config.announcementMessage) {\n            this._live.announce(config.announcementMessage, config.politeness);\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @private\n     * @param {?} config The user-specified snack bar config.\n     * @return {?}\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        /** @type {?} */\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        /** @type {?} */\n        const isRtl = config.direction === 'rtl';\n        /** @type {?} */\n        const isLeft = (config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl));\n        /** @type {?} */\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @private\n     * @template T\n     * @param {?} config Config that was used to create the snack bar.\n     * @param {?} snackBarRef Reference to the snack bar.\n     * @return {?}\n     */\n    _createInjector(config, snackBarRef) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatSnackBarRef, snackBarRef],\n            [MAT_SNACK_BAR_DATA, config.data]\n        ]));\n    }\n}\nMatSnackBar.ɵfac = function MatSnackBar_Factory(t) { return new (t || MatSnackBar)(ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc6.BreakpointObserver), ɵngcc0.ɵɵinject(MatSnackBar, 12), ɵngcc0.ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); };\n/** @nocollapse */\nMatSnackBar.ctorParameters = () => [\n    { type: Overlay },\n    { type: LiveAnnouncer },\n    { type: Injector },\n    { type: BreakpointObserver },\n    { type: MatSnackBar, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: MatSnackBarConfig, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ MatSnackBar.ɵprov = ɵɵdefineInjectable({ factory: function MatSnackBar_Factory() { return new MatSnackBar(ɵɵinject(Overlay), ɵɵinject(LiveAnnouncer), ɵɵinject(INJECTOR), ɵɵinject(BreakpointObserver), ɵɵinject(MatSnackBar, 12), ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); }, token: MatSnackBar, providedIn: MatSnackBarModule });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBar, [{\n        type: Injectable,\n        args: [{ providedIn: MatSnackBarModule }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc5.LiveAnnouncer }, { type: ɵngcc0.Injector }, { type: ɵngcc6.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: MatSnackBarConfig, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n     * If there is a parent snack-bar service, all operations should delegate to that parent\n     * via `_openedSnackBarRef`.\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._snackBarRefAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._live;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._breakpointObserver;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._parentSnackBar;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._defaultConfig;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n\n//# sourceMappingURL=snack-bar.js.map","import { Directive, isDevMode, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatToolbar.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatToolbarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) { return new (t || MatToolbarRow)(); };\nMatToolbarRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatToolbarRow, selectors: [[\"mat-toolbar-row\"]], hostAttrs: [1, \"mat-toolbar-row\"], exportAs: [\"matToolbarRow\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' }\n            }]\n    }], null, null); })();\nclass MatToolbar extends _MatToolbarMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._checkToolbarMixedModes()));\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @private\n     * @return {?}\n     */\n    _checkToolbarMixedModes() {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        /** @type {?} */\n        const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !(node.classList && node.classList.contains('mat-toolbar-row'))))\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)))\n            .some((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !!(node.textContent && node.textContent.trim())));\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    }\n}\nMatToolbar.ɵfac = function MatToolbar_Factory(t) { return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatToolbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatToolbar, selectors: [[\"mat-toolbar\"]], contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    } }, hostAttrs: [1, \"mat-toolbar\"], hostVars: 4, hostBindings: function MatToolbar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matToolbar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatToolbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _toolbarRows: [{\n            type: ContentChildren,\n            args: [MatToolbarRow, { descendants: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._document;\n    /**\n     * Reference to all toolbar row elements that have been projected.\n     * @type {?}\n     */\n    MatToolbar.prototype._toolbarRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._platform;\n}\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatToolbarModule });\nMatToolbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatToolbarModule_Factory(t) { return new (t || MatToolbarModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, { declarations: function () { return [MatToolbar,\n        MatToolbarRow]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatToolbar,\n        MatToolbarRow,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n\n//# sourceMappingURL=toolbar.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n\n\nconst modules = [\n  MatButtonModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatListModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSnackBarModule,\n  MatProgressSpinnerModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ...modules\n  ],\n  exports: [\n    ...modules\n  ]\n})\nexport class MaterialModule { }\n"]}