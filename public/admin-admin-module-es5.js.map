{"version":3,"sources":["webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/home/home.component.ts","webpack:///src/app/admin/home/home.component.html"],"names":["routes","path","component","AdminModule","forChild","declarations","imports","exports","HomeComponent","$router","$cs","$snackBar","isLoading","fetchAllQueries","navigate","getAllQueries","subscribe","data","queries","_id","deleteQuery","openSnackBar","action","open","duration","panelClass","patchQuery","status","onLogOut","selector","templateUrl","styleUrls"],"mappings":"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","file":"admin-admin-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\n\nimport { Routes, RouterModule} from '@angular/router';\nimport { MaterialModule } from '../shared/material.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nconst routes: Routes = [\n  {\n    path: '', component: HomeComponent\n  }\n];\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MaterialModule,\n    HttpClientModule\n  ],\n  exports: [\n    MaterialModule,\n    HttpClientModule\n  ]\n})\nexport class AdminModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ContactService } from 'src/app/shared/contact.service';\nimport { QueryModel } from 'src/app/shared/models/query.model';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  queries: any;\n  isLoading = false;\n  constructor(private $router: Router, private $cs: ContactService, private $snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.fetchAllQueries();\n  }\n\n  onLogOut() {\n    this.$router.navigate(['/']);\n  }\n\n  fetchAllQueries() {\n    this.isLoading = true;\n    this.$cs.getAllQueries().subscribe(data => {\n      this.queries = data;\n      this.isLoading = false;\n    });\n  }\n\n  // tslint:disable-next-line:variable-name\n  onDeleteQuery(_id: string) {\n    this.$cs.deleteQuery(_id).subscribe(data => {\n      if (!data) {\n        this.openSnackBar('query deleted', 'ok');\n        this.fetchAllQueries();\n      }\n    });\n  }\n\n  openSnackBar(data: string, action: string) {\n    this.$snackBar.open(data, action, {\n      duration: 2000,\n      panelClass: 'snackbar'\n    });\n  }\n\n  // tslint:disable-next-line:variable-name\n  onSolvedQuery(_id: string) {\n    this.$cs.patchQuery(_id).subscribe(data => {\n      if (data.status === 'success') {\n        this.openSnackBar('Query marked as Solved ', 'ok');\n        this.fetchAllQueries();\n      }\n    });\n  }\n\n}\n","<mat-toolbar color=\"primary\" class=\"navbar\">\n  <button class=\"bigcool\" mat-button>BigCool</button>\n  <button mat-raised-button color=\"warn\" class=\"logout-btn\" mat-button (click)=\"onLogOut()\">Log Out</button>\n</mat-toolbar>\n<div class=\"queries\" *ngIf=\"!isLoading\">\n  <mat-card *ngFor=\"let query of queries; index as i\" [ngClass]=\"query.solved?'bg-solved':''\" >\n    <span> <b>{{i+1}}.</b> </span> &nbsp;&nbsp; <span> Queried at {{query.createdAt|date:'short'}} </span>\n    <hr>\n    <div class=\"row\">\n      <span class=\"col-lg-4 col-md-4 col-sm-12\"><b>Name</b> : {{query.name | titlecase}} </span>\n      <span class=\"col-lg-4 col-md-4 col-sm-12\"><b>Mobile no</b> : {{query.mobile}} </span>\n      <span class=\"col-lg-4 col-md-4 col-sm-12\"><b>Email</b> : {{query.email}} </span>\n      <P class=\"col-lg-4 col-md-4 col-sm-12\"> <b>Query</b> : {{query.query}} </P>\n    </div>\n    <button class=\"delete\" mat-icon-button (click)=\"onDeleteQuery(query._id)\" color=\"warn\" title=\"Delete Query\">\n      <mat-icon>delete</mat-icon>\n    </button>\n    <button *ngIf=\"!query.solved\" class=\"mks\" mat-button color=\"primary\" (click)=\"onSolvedQuery(query._id)\">\n      Mark as Solved\n    </button>\n    <span class=\"mks\" *ngIf=\"query.solved\">\n      <mat-icon>done</mat-icon>\n    </span>\n  </mat-card>\n</div>\n<mat-spinner *ngIf=\"isLoading\" color=\"accent\"></mat-spinner>\n"]}