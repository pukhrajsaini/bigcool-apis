{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/contact.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","WebModule","AdminModule","AppRoutingModule","forRoot","imports","AppComponent","loader","setTimeout","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ContactService","$http","queryApi","name","required","email","mobile","query","post","observe","get","_id","patch","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '', loadChildren: () => import('./web/web.module').then(m => m.WebModule)\n  },\n  {\n    path: 'bigcooladminexpert', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule)\n  },\n  {\n    path: '**', loadChildren: () => import('./web/web.module').then(m => m.WebModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  loader = true;\n  constructor() {\n    setTimeout(() => {\n      this.loader = false;\n    }, 3000);\n  }\n\n}\n","<div>\n  <mat-spinner *ngIf=\"loader\" color=\"accent\"></mat-spinner>\n  <h1 *ngIf=\"!loader\">\n    Connection Time Out\n  </h1>\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ContactService } from './shared/contact.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [ContactService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { QueryModel } from './models/query.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  queryApi = 'http://localhost:3000/api/query';\n\n  constructor(private $http: HttpClient) { }\n\n  queryForm(): FormGroup {\n    return new FormGroup({\n      name: new FormControl(null, Validators.required),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      mobile: new FormControl(null, Validators.required),\n      query: new FormControl(null, Validators.required)\n    });\n  }\n\n  addQuery(query: any): Observable<any> {\n    return this.$http.post<any>(this.queryApi, query, { observe: 'response' });\n  }\n\n  getAllQueries(): Observable<QueryModel[]> {\n    return this.$http.get<QueryModel[]>(this.queryApi);\n  }\n\n  // tslint:disable-next-line:variable-name\n  deleteQuery(_id: string): Observable<any> {\n    return this.$http.delete<any>(`${this.queryApi}/${_id}`);\n  }\n\n  // tslint:disable-next-line:variable-name\n  patchQuery(_id: string): Observable<any> {\n    return this.$http.patch<any>(`${this.queryApi}/${_id}`, null);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}